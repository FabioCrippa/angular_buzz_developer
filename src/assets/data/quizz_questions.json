{
  "title": "Quiz de Front-End Avançado",
  "questions": [
    {
      "id": 1,
      "question": "O que significa HTML?",
      "options": [
        { "id": 1, "name": "HyperText Markup Language", "alias": "a" },
        { "id": 2, "name": "HyperText Machine Language", "alias": "b" },
        { "id": 3, "name": "HyperTool Markup Language", "alias": "c" }
      ],
      "correct": "a",
      "explanation": "HTML significa HyperText Markup Language, a linguagem de marcação usada para estruturar páginas web.",
      "category": "html"
    },
    {
      "id": 2,
      "question": "Qual tag HTML é usada para criar um link?",
      "options": [
        { "id": 1, "name": "<a>", "alias": "a" },
        { "id": 2, "name": "<link>", "alias": "b" },
        { "id": 3, "name": "<href>", "alias": "c" }
      ],
      "correct": "a",
      "explanation": "A tag <a> é usada para criar links em HTML.",
      "category": "html"
    },
    {
      "id": 3,
      "question": "Qual atributo é usado para abrir um link em uma nova aba?",
      "options": [
        { "id": 1, "name": "target='_blank'", "alias": "a" },
        { "id": 2, "name": "rel='new-tab'", "alias": "b" },
        { "id": 3, "name": "open='new'", "alias": "c" }
      ],
      "correct": "a",
      "explanation": "O atributo target='_blank' faz com que o link seja aberto em uma nova aba.",
      "category": "html"
    },
    {
      "id": 4,
      "question": "Qual é a função da tag <meta> no HTML?",
      "options": [
        { "id": 1, "name": "Definir metadados sobre o documento", "alias": "a" },
        { "id": 2, "name": "Adicionar estilos ao documento", "alias": "b" },
        { "id": 3, "name": "Criar links para outros documentos", "alias": "c" }
      ],
      "correct": "a",
      "explanation": "A tag <meta> define metadados como charset, autor e descrição do documento.",
      "category": "html"
    },
    {
      "id": 5,
      "question": "Qual é o propósito do atributo 'alt' em uma tag <img>?",
      "options": [
        { "id": 1, "name": "Definir o texto alternativo para a imagem", "alias": "a" },
        { "id": 2, "name": "Alterar o tamanho da imagem", "alias": "b" },
        { "id": 3, "name": "Definir a URL da imagem", "alias": "c" }
      ],
      "correct": "a",
      "explanation": "O atributo 'alt' fornece uma descrição alternativa para a imagem, importante para acessibilidade.",
      "category": "html"
    },
    {
      "id": 6,
      "question": "Qual é a diferença entre <section> e <div> no HTML5?",
      "options": [
        { "id": 1, "name": "<section> é semântica, enquanto <div> não é", "alias": "a" },
        { "id": 2, "name": "<div> é semântica, enquanto <section> não é", "alias": "b" },
        { "id": 3, "name": "Ambas são semânticas", "alias": "c" }
      ],
      "correct": "a",
      "explanation": "<section> é uma tag semântica usada para dividir o conteúdo em seções temáticas, enquanto <div> é apenas um contêiner genérico.",
      "category": "html"
    },
    {
      "id": 7,
      "question": "Qual é o propósito do atributo 'defer' em uma tag <script>?",
      "options": [
        { "id": 1, "name": "Carregar o script após o HTML ser completamente analisado", "alias": "a" },
        { "id": 2, "name": "Carregar o script antes do HTML ser analisado", "alias": "b" },
        { "id": 3, "name": "Carregar o script de forma síncrona", "alias": "c" }
      ],
      "correct": "a",
      "explanation": "O atributo 'defer' faz com que o script seja executado somente após o HTML ter sido totalmente carregado.",
      "category": "html"
    },
    {
      "id": 8,
      "question": "Qual é o propósito da tag <template> no HTML5?",
      "options": [
        { "id": 1, "name": "Definir conteúdo que não será renderizado até ser usado via JavaScript", "alias": "a" },
        { "id": 2, "name": "Adicionar estilos ao documento", "alias": "b" },
        { "id": 3, "name": "Criar links para outros documentos", "alias": "c" }
      ],
      "correct": "a",
      "explanation": "A tag <template> permite definir blocos de HTML que só serão renderizados quando manipulados via JavaScript.",
      "category": "html"
    },
    {
      "id": 9,
      "question": "Qual é o propósito do atributo 'contenteditable' no HTML?",
      "options": [
        { "id": 1, "name": "Permitir que o conteúdo de um elemento seja editado pelo usuário", "alias": "a" },
        { "id": 2, "name": "Adicionar estilos ao documento", "alias": "b" },
        { "id": 3, "name": "Criar links para outros documentos", "alias": "c" }
      ],
      "correct": "a",
      "explanation": "O atributo 'contenteditable' permite que o usuário edite o conteúdo do elemento diretamente na página.",
      "category": "html"
    },
    {
      "id": 10,
      "question": "Qual é o propósito do atributo 'aria-label' no HTML?",
      "options": [
        { "id": 1, "name": "Melhorar a acessibilidade ao fornecer uma descrição para leitores de tela", "alias": "a" },
        { "id": 2, "name": "Adicionar estilos ao documento", "alias": "b" },
        { "id": 3, "name": "Criar links para outros documentos", "alias": "c" }
      ],
      "correct": "a",
      "explanation": "O atributo 'aria-label' fornece uma descrição acessível para leitores de tela, melhorando a acessibilidade.",
      "category": "html"
    },
    {
      "id": 11,
      "question": "Qual propriedade CSS é usada para alterar a cor do texto?",
      "options": [
        { "id": 1, "name": "color", "alias": "a" },
        { "id": 2, "name": "text-color", "alias": "b" },
        { "id": 3, "name": "font-color", "alias": "c" }
      ],
      "correct": "a",
      "category": "css"
    },
    {
      "id": 12,
      "question": "Qual é o propósito do método 'filter()' em JavaScript?",
      "options": [
        { "id": 1, "name": "Filtrar elementos de um array com base em uma condição", "alias": "a" },
        { "id": 2, "name": "Adicionar elementos a um array", "alias": "b" },
        { "id": 3, "name": "Remover elementos de um array", "alias": "c" }
      ],
      "correct": "a",
      "category": "javascript"
    },
    {
      "id": 13,
      "question": "Qual é o comando para criar um branch no Git?",
      "options": [
        { "id": 1, "name": "git branch <nome>", "alias": "a" },
        { "id": 2, "name": "git create <nome>", "alias": "b" },
        { "id": 3, "name": "git new <nome>", "alias": "c" }
      ],
      "correct": "a",
      "category": "versionamento"
    },
    {
      "id": 14,
      "question": "Qual é o propósito do atributo 'media' em uma tag <link> no CSS?",
      "options": [
        { "id": 1, "name": "Aplicar estilos com base no tipo de dispositivo", "alias": "a" },
        { "id": 2, "name": "Adicionar metadados ao documento", "alias": "b" },
        { "id": 3, "name": "Definir o caminho para o arquivo CSS", "alias": "c" }
      ],
      "correct": "a",
      "category": "responsividade"
    },
    {
      "id": 15,
      "question": "O que é um 'sprint' no Scrum?",
      "options": [
        { "id": 1, "name": "Um período de tempo para completar um conjunto de tarefas", "alias": "a" },
        { "id": 2, "name": "Uma reunião para revisar o progresso do projeto", "alias": "b" },
        { "id": 3, "name": "Um documento que descreve os requisitos do projeto", "alias": "c" }
      ],
      "correct": "a",
      "category": "scrum"
    },
    {
      "id": 16,
      "question": "Qual é o comando para fazer deploy em um pipeline DevOps?",
      "options": [
        { "id": 1, "name": "dep deploy", "alias": "a" },
        { "id": 2, "name": "git deploy", "alias": "b" },
        { "id": 3, "name": "dep push", "alias": "c" }
      ],
      "correct": "a",
      "category": "devops"
    },
    {
      "id": 17,
      "question": "Qual é o propósito de um certificado SSL em um ambiente criptografado?",
      "options": [
        { "id": 1, "name": "Garantir a comunicação segura entre cliente e servidor", "alias": "a" },
        { "id": 2, "name": "Aumentar a velocidade de carregamento do site", "alias": "b" },
        { "id": 3, "name": "Adicionar estilos ao site", "alias": "c" }
      ],
      "correct": "a",
      "category": "criptografia"
    },
    {
      "id": 18,
      "question": "Qual é o propósito do `ngFor` no Angular?",
      "options": [
        { "id": 1, "name": "Iterar sobre uma lista e renderizar elementos dinamicamente", "alias": "a" },
        { "id": 2, "name": "Condicionalmente renderizar elementos", "alias": "b" },
        { "id": 3, "name": "Definir um serviço global", "alias": "c" }
      ],
      "correct": "a",
      "category": "angular"
    },
    {
      "id": 19,
      "question": "Qual é o propósito do `ngModel` no Angular?",
      "options": [
        { "id": 1, "name": "Criar uma ligação bidirecional entre o modelo e a visão", "alias": "a" },
        { "id": 2, "name": "Definir um componente", "alias": "b" },
        { "id": 3, "name": "Configurar rotas", "alias": "c" }
      ],
      "correct": "a",
      "category": "angular"
    },
    {
      "id": 20,
      "question": "Qual é o propósito do `ng-content` no Angular?",
      "options": [
        { "id": 1, "name": "Permitir a projeção de conteúdo em componentes", "alias": "a" },
        { "id": 2, "name": "Definir um componente", "alias": "b" },
        { "id": 3, "name": "Configurar rotas", "alias": "c" }
      ],
      "correct": "a",
      "category": "angular"
    },
    {
      "id": 21,
      "question": "Qual comando é usado para criar um novo componente no Angular CLI?",
      "options": [
        { "id": 1, "name": "ng generate component", "alias": "a" },
        { "id": 2, "name": "ng create component", "alias": "b" },
        { "id": 3, "name": "ng new component", "alias": "c" }
      ],
      "correct": "a",
      "category": "angular"
    },
    {
      "id": 22,
      "question": "Qual é o propósito do arquivo `angular.json` em um projeto Angular?",
      "options": [
        { "id": 1, "name": "Configurar o build e as configurações do projeto", "alias": "a" },
        { "id": 2, "name": "Definir os estilos globais do projeto", "alias": "b" },
        { "id": 3, "name": "Gerenciar dependências do projeto", "alias": "c" }
      ],
      "correct": "a",
      "category": "angular"
    },
    {
      "id": 23,
      "question": "Qual decorator é usado para definir um componente no Angular?",
      "options": [
        { "id": 1, "name": "@Component", "alias": "a" },
        { "id": 2, "name": "@NgModule", "alias": "b" },
        { "id": 3, "name": "@Injectable", "alias": "c" }
      ],
      "correct": "a",
      "category": "angular"
    },
    {
      "id": 24,
      "question": "Qual é o propósito do `RouterModule` no Angular?",
      "options": [
        { "id": 1, "name": "Configurar rotas no aplicativo", "alias": "a" },
        { "id": 2, "name": "Gerenciar dependências", "alias": "b" },
        { "id": 3, "name": "Definir serviços globais", "alias": "c" }
      ],
      "correct": "a",
      "category": "angular"
    },
    {
      "id": 25,
      "question": "Qual é o ciclo de vida do Angular que é chamado após a criação do componente?",
      "options": [
        { "id": 1, "name": "ngOnInit", "alias": "a" },
        { "id": 2, "name": "ngAfterViewInit", "alias": "b" },
        { "id": 3, "name": "ngOnDestroy", "alias": "c" }
      ],
      "correct": "a",
      "category": "angular"
    },
    {
      "id": 26,
      "question": "Qual é o propósito do `HttpClientModule` no Angular?",
      "options": [
        { "id": 1, "name": "Realizar requisições HTTP", "alias": "a" },
        { "id": 2, "name": "Gerenciar rotas", "alias": "b" },
        { "id": 3, "name": "Definir componentes", "alias": "c" }
      ],
      "correct": "a",
      "category": "angular"
    },
    {
      "id": 27,
      "question": "Qual é o comando para rodar um projeto Angular localmente?",
      "options": [
        { "id": 1, "name": "ng serve", "alias": "a" },
        { "id": 2, "name": "ng start", "alias": "b" },
        { "id": 3, "name": "ng run", "alias": "c" }
      ],
      "correct": "a",
      "category": "angular"
    },
    {
      "id": 28,
      "question": "Qual é o propósito do `@Input` no Angular?",
      "options": [
        { "id": 1, "name": "Permitir que um componente receba dados de um componente pai", "alias": "a" },
        { "id": 2, "name": "Enviar dados para um componente filho", "alias": "b" },
        { "id": 3, "name": "Definir um serviço global", "alias": "c" }
      ],
      "correct": "a",
      "category": "angular"
    },
    {
      "id": 29,
      "question": "Qual é o propósito do `@Output` no Angular?",
      "options": [
        { "id": 1, "name": "Emitir eventos de um componente filho para o pai", "alias": "a" },
        { "id": 2, "name": "Receber dados de um componente pai", "alias": "b" },
        { "id": 3, "name": "Definir um serviço global", "alias": "c" }
      ],
      "correct": "a",
      "category": "angular"
    },
    {
      "id": 30,
      "question": "Qual é o propósito do `ngFor` no Angular?",
      "options": [
        { "id": 1, "name": "Iterar sobre uma lista e renderizar elementos dinamicamente", "alias": "a" },
        { "id": 2, "name": "Condicionalmente renderizar elementos", "alias": "b" },
        { "id": 3, "name": "Definir um serviço global", "alias": "c" }
      ],
      "correct": "a",
      "category": "angular"
    },
    {
      "id": 31,
      "question": "Qual é o propósito do `ngIf` no Angular?",
      "options": [
        { "id": 1, "name": "Condicionalmente renderizar elementos", "alias": "a" },
        { "id": 2, "name": "Iterar sobre uma lista", "alias": "b" },
        { "id": 3, "name": "Definir um serviço global", "alias": "c" }
      ],
      "correct": "a",
      "category": "angular"
    },
    {
      "id": 32,
      "question": "Qual é o propósito do `@Injectable` no Angular?",
      "options": [
        { "id": 1, "name": "Definir uma classe como um serviço que pode ser injetado", "alias": "a" },
        { "id": 2, "name": "Definir um componente", "alias": "b" },
        { "id": 3, "name": "Configurar rotas", "alias": "c" }
      ],
      "correct": "a",
      "category": "angular"
    },
    {
      "id": 33,
      "question": "Qual é o propósito do `ngOnDestroy` no Angular?",
      "options": [
        { "id": 1, "name": "Executar lógica antes de destruir um componente", "alias": "a" },
        { "id": 2, "name": "Inicializar um componente", "alias": "b" },
        { "id": 3, "name": "Configurar rotas", "alias": "c" }
      ],
      "correct": "a",
      "category": "angular"
    },
    {
      "id": 34,
      "question": "Qual é o propósito do `@NgModule` no Angular?",
      "options": [
        { "id": 1, "name": "Definir um módulo no Angular", "alias": "a" },
        { "id": 2, "name": "Definir um componente", "alias": "b" },
        { "id": 3, "name": "Configurar rotas", "alias": "c" }
      ],
      "correct": "a",
      "category": "angular"
    },
    {
      "id": 35,
      "question": "Qual é o propósito do `ngClass` no Angular?",
      "options": [
        { "id": 1, "name": "Adicionar ou remover classes dinamicamente", "alias": "a" },
        { "id": 2, "name": "Iterar sobre uma lista", "alias": "b" },
        { "id": 3, "name": "Definir um serviço global", "alias": "c" }
      ],
      "correct": "a",
      "category": "angular"
    },
    {
      "id": 36,
      "question": "Qual é o propósito do `ngStyle` no Angular?",
      "options": [
        { "id": 1, "name": "Adicionar ou remover estilos dinamicamente", "alias": "a" },
        { "id": 2, "name": "Iterar sobre uma lista", "alias": "b" },
        { "id": 3, "name": "Definir um serviço global", "alias": "c" }
      ],
      "correct": "a",
      "category": "angular"
    },
    {
      "id": 37,
      "question": "Qual é o propósito do `async` no Angular?",
      "options": [
        { "id": 1, "name": "Trabalhar com observáveis e promessas de forma assíncrona", "alias": "a" },
        { "id": 2, "name": "Definir um componente", "alias": "b" },
        { "id": 3, "name": "Configurar rotas", "alias": "c" }
      ],
      "correct": "a",
      "category": "angular"
    },
    {
      "id": 38,
      "question": "Qual é o propósito do `FormGroup` no Angular?",
      "options": [
        { "id": 1, "name": "Gerenciar um grupo de controles de formulário", "alias": "a" },
        { "id": 2, "name": "Definir um componente", "alias": "b" },
        { "id": 3, "name": "Configurar rotas", "alias": "c" }
      ],
      "correct": "a",
      "category": "angular"
    },
    {
      "id": 39,
      "question": "Qual é o propósito do `FormControl` no Angular?",
      "options": [
        { "id": 1, "name": "Gerenciar o estado de um controle de formulário", "alias": "a" },
        { "id": 2, "name": "Definir um componente", "alias": "b" },
        { "id": 3, "name": "Configurar rotas", "alias": "c" }
      ],
      "correct": "a",
      "category": "angular"
    },
    {
      "id": 40,
      "question": "Qual é o propósito do `ReactiveFormsModule` no Angular?",
      "options": [
        { "id": 1, "name": "Trabalhar com formulários reativos", "alias": "a" },
        { "id": 2, "name": "Definir um componente", "alias": "b" },
        { "id": 3, "name": "Configurar rotas", "alias": "c" }
      ],
      "correct": "a",
      "category": "angular"
    },
    {
      "id": 41,
      "question": "Qual é a diferença entre `inline`, `block` e `inline-block` no CSS?",
      "options": [
        { "id": 1, "name": "Define como os elementos são renderizados na página", "alias": "a" },
        { "id": 2, "name": "Define a cor do texto", "alias": "b" },
        { "id": 3, "name": "Define o tamanho do elemento", "alias": "c" }
      ],
      "correct": "a",
      "category": "css"
    },
    {
      "id": 42,
      "question": "Explique o conceito de 'hoisting' no JavaScript.",
      "options": [
        { "id": 1, "name": "É o comportamento de mover declarações para o topo do escopo", "alias": "a" },
        { "id": 2, "name": "É o processo de otimização de código", "alias": "b" },
        { "id": 3, "name": "É o método de chamar funções assíncronas", "alias": "c" }
      ],
      "correct": "a",
      "category": "javascript"
    },
    {
      "id": 43,
      "question": "Qual é a diferença entre `let`, `var` e `const` no JavaScript?",
      "options": [
        { "id": 1, "name": "`let` e `const` têm escopo de bloco, enquanto `var` tem escopo de função", "alias": "a" },
        { "id": 2, "name": "`var` e `const` têm escopo global, enquanto `let` tem escopo de bloco", "alias": "b" },
        { "id": 3, "name": "Não há diferença entre eles", "alias": "c" }
      ],
      "correct": "a",
      "category": "javascript"
    },
    {
      "id": 44,
      "question": "O que é o DOM (Document Object Model)?",
      "options": [
        { "id": 1, "name": "É a representação em árvore de um documento HTML ou XML", "alias": "a" },
        { "id": 2, "name": "É o modelo de design de um site", "alias": "b" },
        { "id": 3, "name": "É o método de estilização de elementos", "alias": "c" }
      ],
      "correct": "a",
      "category": "html"
    },
    {
      "id": 45,
      "question": "Qual é a diferença entre `==` e `===` no JavaScript?",
      "options": [
        { "id": 1, "name": "`==` compara valores, enquanto `===` compara valores e tipos", "alias": "a" },
        { "id": 2, "name": "`==` compara valores e tipos, enquanto `===` compara apenas valores", "alias": "b" },
        { "id": 3, "name": "Ambos comparam apenas valores", "alias": "c" }
      ],
      "correct": "a",
      "explanation": "`==` permite coerção de tipos, enquanto `===` é uma comparação estrita.",
      "category": "javascript",
      "interviewTip": "Como explicar na entrevista: Sempre uso '===' (strict equality) porque é mais previsível. O '==' faz coerção de tipos que pode causar bugs sutis. Por exemplo, '0' == false retorna true, mas '0' === false retorna false. Em produção, prefiro ser explícito e evitar comportamentos inesperados."
    },
    {
      "id": 46,
      "question": "O que é o conceito de 'responsividade' no design web?",
      "options": [
        { "id": 1, "name": "É a capacidade de um site se ajustar a diferentes tamanhos de tela", "alias": "a" },
        { "id": 2, "name": "É a velocidade de carregamento de um site", "alias": "b" },
        { "id": 3, "name": "É a capacidade de um site responder a eventos do usuário", "alias": "c" }
      ],
      "correct": "a",
      "category": "responsividade"
    },
    {
      "id": 47,
      "question": "Explique o conceito de 'promises' no JavaScript.",
      "options": [
        { "id": 1, "name": "É um objeto que representa a eventual conclusão ou falha de uma operação assíncrona", "alias": "a" },
        { "id": 2, "name": "É um método para criar funções síncronas", "alias": "b" },
        { "id": 3, "name": "É uma função que retorna valores imediatamente", "alias": "c" }
      ],
      "correct": "a",
      "category": "javascript"
    },
    {
      "id": 48,
      "question": "Qual é o propósito do atributo `viewport` em uma tag `<meta>`?",
      "options": [
        { "id": 1, "name": "Controlar como o conteúdo é exibido em dispositivos móveis", "alias": "a" },
        { "id": 2, "name": "Definir o idioma do documento", "alias": "b" },
        { "id": 3, "name": "Adicionar estilos ao documento", "alias": "c" }
      ],
      "correct": "a",
      "category": "html"
    },
    {
      "id": 49,
      "question": "O que é um 'polyfill' no desenvolvimento web?",
      "options": [
        { "id": 1, "name": "É um código que adiciona suporte a funcionalidades não disponíveis em navegadores antigos", "alias": "a" },
        { "id": 2, "name": "É um método para otimizar o carregamento de páginas", "alias": "b" },
        { "id": 3, "name": "É uma biblioteca para criar animações", "alias": "c" }
      ],
      "correct": "a",
      "category": "javascript"
    },
    {
      "id": 50,
      "question": "Qual é o propósito do `box-sizing` no CSS?",
      "options": [
        { "id": 1, "name": "Controlar como o tamanho total de um elemento é calculado", "alias": "a" },
        { "id": 2, "name": "Definir o espaçamento interno de um elemento", "alias": "b" },
        { "id": 3, "name": "Definir a largura de um elemento", "alias": "c" }
      ],
      "correct": "a",
      "category": "css"
    },
    {
      "id": 51,
      "question": "Qual é o propósito da tag <header> no HTML5?",
      "options": [
        { "id": 1, "name": "Definir o cabeçalho de uma página ou seção", "alias": "a" },
        { "id": 2, "name": "Adicionar um rodapé à página", "alias": "b" },
        { "id": 3, "name": "Criar um link para outro documento", "alias": "c" }
      ],
      "correct": "a",
      "category": "html"
    },
    {
      "id": 52,
      "question": "Qual é o propósito da tag <footer> no HTML5?",
      "options": [
        { "id": 1, "name": "Definir o rodapé de uma página ou seção", "alias": "a" },
        { "id": 2, "name": "Adicionar um cabeçalho à página", "alias": "b" },
        { "id": 3, "name": "Criar um link para outro documento", "alias": "c" }
      ],
      "correct": "a",
      "category": "html"
    },
    {
      "id": 53,
      "question": "Qual é o propósito do atributo 'lang' na tag <html>?",
      "options": [
        { "id": 1, "name": "Definir o idioma do documento", "alias": "a" },
        { "id": 2, "name": "Adicionar estilos ao documento", "alias": "b" },
        { "id": 3, "name": "Criar links para outros documentos", "alias": "c" }
      ],
      "correct": "a",
      "category": "html"
    },
    {
      "id": 54,
      "question": "Qual é o propósito do atributo 'charset' na tag <meta>?",
      "options": [
        { "id": 1, "name": "Definir a codificação de caracteres do documento", "alias": "a" },
        { "id": 2, "name": "Adicionar estilos ao documento", "alias": "b" },
        { "id": 3, "name": "Criar links para outros documentos", "alias": "c" }
      ],
      "correct": "a",
      "category": "html"
    },
    {
      "id": 55,
      "question": "Qual é o propósito da tag <aside> no HTML5?",
      "options": [
        { "id": 1, "name": "Definir conteúdo relacionado, como barras laterais", "alias": "a" },
        { "id": 2, "name": "Adicionar um cabeçalho à página", "alias": "b" },
        { "id": 3, "name": "Criar links para outros documentos", "alias": "c" }
      ],
      "correct": "a",
      "category": "html"
    },
    {
      "id": 56,
      "question": "Qual propriedade CSS é usada para alterar o tamanho da fonte?",
      "options": [
        { "id": 1, "name": "font-size", "alias": "a" },
        { "id": 2, "name": "text-size", "alias": "b" },
        { "id": 3, "name": "size", "alias": "c" }
      ],
      "correct": "a",
      "category": "css"
    },
    {
      "id": 57,
      "question": "Qual propriedade CSS é usada para alterar a cor de fundo?",
      "options": [
        { "id": 1, "name": "background-color", "alias": "a" },
        { "id": 2, "name": "color", "alias": "b" },
        { "id": 3, "name": "bg-color", "alias": "c" }
      ],
      "correct": "a",
      "category": "css"
    },
    {
      "id": 58,
      "question": "Qual propriedade CSS é usada para centralizar texto?",
      "options": [
        { "id": 1, "name": "text-align", "alias": "a" },
        { "id": 2, "name": "align", "alias": "b" },
        { "id": 3, "name": "center", "alias": "c" }
      ],
      "correct": "a",
      "category": "css"
    },
      {
        "id": 59,
        "question": "Qual é a diferença entre `let`, `var` e `const` na declaração de variáveis?",
        "options": [
          { "id": 1, "name": "`var` tem escopo de função, `let` e `const` têm escopo de bloco", "alias": "a" },
          { "id": 2, "name": "`const` pode ser redefinido após a sua declaração", "alias": "b" },
          { "id": 3, "name": "`let` e `var` são exatamente iguais", "alias": "c" }
        ],
        "correct": "a",
        "category": "javascript"
      },
      {
        "id": 60,
        "question": "O que é um closure em JavaScript?",
        "options": [
          { "id": 1, "name": "Uma função que encapsula uma variável global", "alias": "a" },
          { "id": 2, "name": "Uma função que pode acessar variáveis de seu escopo léxico mesmo após serem removidas do escopo original", "alias": "b" },
          { "id": 3, "name": "Um erro de compilação em JavaScript", "alias": "c" }
        ],
        "correct": "b",
        "category": "javascript"
      },
      {
        "id": 61,
        "question": "Qual é a diferença entre `==` e `===`?",
        "options": [
          { "id": 1, "name": "`==` compara apenas o valor, enquanto `===` compara valor e tipo", "alias": "a" },
          { "id": 2, "name": "`==` e `===` são equivalentes", "alias": "b" },
          { "id": 3, "name": "`===` permite conversão automática de tipos", "alias": "c" }
        ],
        "correct": "a",
        "category": "javascript"
      },
      {
        "id": 62,
        "question": "O que é o **Event Loop** em JavaScript?",
        "options": [
          { "id": 1, "name": "Um mecanismo que permite a execução assíncrona em JavaScript", "alias": "a" },
          { "id": 2, "name": "Uma estrutura para gerenciar funções síncronas", "alias": "b" },
          { "id": 3, "name": "Um processo que bloqueia a execução do JavaScript", "alias": "c" }
        ],
        "correct": "a",
        "category": "javascript"
      },
      {
        "id": 63,
        "question": "O que é o `this` em JavaScript?",
        "options": [
          { "id": 1, "name": "Uma referência ao contexto de execução atual que pode variar", "alias": "a" },
          { "id": 2, "name": "Um objeto global que nunca muda", "alias": "b" },
          { "id": 3, "name": "Um método de manipulação de DOM", "alias": "c" }
        ],
        "correct": "a",
        "category": "javascript"
      },
      {
        "id": 64,
        "question": "Como funciona a herança baseada em protótipos no JavaScript?",
        "options": [
          { "id": 1, "name": "Objetos podem herdar propriedades diretamente de outros objetos por meio de protótipos", "alias": "a" },
          { "id": 2, "name": "JavaScript não suporta herança", "alias": "b" },
          { "id": 3, "name": "A herança em JavaScript é baseada em classes", "alias": "c" }
        ],
        "correct": "a",
        "category": "javascript"
      },
      {
        "id": 65,
        "question": "Como podemos manipular objetos utilizando **destructuring assignment**?",
        "options": [
          { "id": 1, "name": "Atribuindo valores de propriedades diretamente a variáveis usando uma sintaxe especial", "alias": "a" },
          { "id": 2, "name": "Convertendo objetos em arrays automaticamente", "alias": "b" },
          { "id": 3, "name": "Usando um loop `for` para extrair valores", "alias": "c" }
        ],
        "correct": "a",
        "category": "javascript"
      },
      {
        "id": 66,
        "question": "Explique o conceito de **hoisting** em JavaScript.",
        "options": [
          { "id": 1, "name": "Mover declarações de variáveis e funções para o topo do escopo durante a execução", "alias": "a" },
          { "id": 2, "name": "Ajustar automaticamente o desempenho do código JavaScript", "alias": "b" },
          { "id": 3, "name": "Criar um novo escopo para cada variável", "alias": "c" }
        ],
        "correct": "a",
        "category": "javascript"
      },
      {
        "id": 67,
        "question": "O que são **Promises** em JavaScript?",
        "options": [
          { "id": 1, "name": "Uma estrutura para gerenciar código assíncrono", "alias": "a" },
          { "id": 2, "name": "Uma forma de definir variáveis imutáveis", "alias": "b" },
          { "id": 3, "name": "Um loop de repetição especial", "alias": "c" }
        ],
        "correct": "a",
        "category": "javascript"
      },
      {
        "id": 68,
        "question": "O que acontece quando usamos `setTimeout` com um valor de 0ms?",
        "options": [
          { "id": 1, "name": "A função é executada imediatamente", "alias": "a" },
          { "id": 2, "name": "A função é colocada na fila de execução e executada após o Event Loop concluir outras tarefas", "alias": "b" },
          { "id": 3, "name": "O JavaScript pausa a execução até que a função seja chamada", "alias": "c" }
        ],
        "correct": "b",
        "category": "javascript"
      },
      {
        "id": 69,
        "question": "O que é versionamento de código?",
        "options": [
          { "id": 1, "name": "Um processo para acompanhar e registrar alterações no código-fonte", "alias": "a" },
          { "id": 2, "name": "Uma técnica para compactar arquivos de código", "alias": "b" },
          { "id": 3, "name": "Um método de criptografia para proteger código-fonte", "alias": "c" }
        ],
        "correct": "a",
        "category": "versionamento"
      },
      {
        "id": 70,
        "question": "Qual a diferença entre versionamento centralizado e distribuído?",
        "options": [
          { "id": 1, "name": "No centralizado, há um único repositório central; no distribuído, cada usuário tem uma cópia completa", "alias": "a" },
          { "id": 2, "name": "No distribuído, os arquivos são armazenados localmente sem necessidade de um servidor", "alias": "b" },
          { "id": 3, "name": "No centralizado, cada usuário tem uma cópia completa do repositório", "alias": "c" }
        ],
        "correct": "a",
        "category": "versionamento"
      },
      {
        "id": 71,
        "question": "O que é um commit no controle de versão?",
        "options": [
          { "id": 1, "name": "Uma alteração registrada no histórico do repositório", "alias": "a" },
          { "id": 2, "name": "Um backup automático do código-fonte", "alias": "b" },
          { "id": 3, "name": "Um comando para excluir arquivos do repositório", "alias": "c" }
        ],
        "correct": "a",
        "category": "versionamento"
      },
      {
        "id": 72,
        "question": "Como funcionam os branches em sistemas de versionamento como Git?",
        "options": [
          { "id": 1, "name": "Permitem trabalhar em diferentes versões do código sem afetar a principal", "alias": "a" },
          { "id": 2, "name": "São cópias permanentes do código que não podem ser alteradas", "alias": "b" },
          { "id": 3, "name": "São arquivos temporários que desaparecem após o commit", "alias": "c" }
        ],
        "correct": "a",
        "category": "versionamento"
      },
      {
        "id": 73,
        "question": "O que é um merge no Git?",
        "options": [
          { "id": 1, "name": "A junção de alterações de diferentes branches em um único branch", "alias": "a" },
          { "id": 2, "name": "Um comando para excluir branches antigos", "alias": "b" },
          { "id": 3, "name": "Uma técnica para compactar commits", "alias": "c" }
        ],
        "correct": "a",
        "category": "versionamento"
      },
      {
        "id": 74,
        "question": "Por que mensagens de commit bem escritas são importantes?",
        "options": [
          { "id": 1, "name": "Facilitam o entendimento das alterações feitas no código", "alias": "a" },
          { "id": 2, "name": "Ajudam a reduzir o tamanho do repositório", "alias": "b" },
          { "id": 3, "name": "São obrigatórias para realizar um commit", "alias": "c" }
        ],
        "correct": "a",
        "category": "versionamento"
      },
      {
        "id": 75,
        "question": "O que são tags em sistemas de versionamento?",
        "options": [
          { "id": 1, "name": "Marcadores usados para identificar versões específicas do código", "alias": "a" },
          { "id": 2, "name": "Arquivos temporários gerados pelo sistema de controle de versão", "alias": "b" },
          { "id": 3, "name": "Comentários adicionados ao código para facilitar a leitura", "alias": "c" }
        ],
        "correct": "a",
        "category": "versionamento"
      },
      {
        "id": 76,
        "question": "Como o versionamento de código facilita o trabalho colaborativo?",
        "options": [
          { "id": 1, "name": "Permite que vários desenvolvedores trabalhem simultaneamente sem conflitos", "alias": "a" },
          { "id": 2, "name": "Impede que diferentes usuários acessem o mesmo código", "alias": "b" },
          { "id": 3, "name": "Remove automaticamente código duplicado", "alias": "c" }
        ],
        "correct": "a",
        "category": "versionamento"
      },
      {
        "id": 77,
        "question": "O que é um repositório remoto?",
        "options": [
          { "id": 1, "name": "Um repositório armazenado em um servidor acessível por vários usuários", "alias": "a" },
          { "id": 2, "name": "Uma cópia local do código-fonte", "alias": "b" },
          { "id": 3, "name": "Um backup automático do código", "alias": "c" }
        ],
        "correct": "a",
        "category": "versionamento"
      },
      {
        "id": 78,
        "question": "Quais são as melhores práticas para evitar conflitos ao trabalhar com versionamento?",
        "options": [
          { "id": 1, "name": "Realizar commits frequentes e manter o código atualizado com o repositório remoto", "alias": "a" },
          { "id": 2, "name": "Evitar o uso de branches", "alias": "b" },
          { "id": 3, "name": "Nunca realizar merges", "alias": "c" }
        ],
        "correct": "a",
        "category": "versionamento"
      },
      {
        "id": 79,
        "question": "O que é CSS e qual sua função?",
        "options": [
          { "id": 1, "name": "Uma linguagem de marcação para estruturar páginas web", "alias": "a" },
          { "id": 2, "name": "Uma linguagem de estilo usada para definir a aparência de elementos HTML", "alias": "b" },
          { "id": 3, "name": "Um framework para desenvolvimento de aplicações web", "alias": "c" }
        ],
        "correct": "b",
        "category": "css"
      },
      {
        "id": 80,
        "question": "Qual a diferença entre CSS inline, interno e externo?",
        "options": [
          { "id": 1, "name": "CSS inline é aplicado diretamente no elemento, interno dentro da tag `<style>` e externo em um arquivo separado", "alias": "a" },
          { "id": 2, "name": "CSS interno e externo são iguais, apenas o inline é diferente", "alias": "b" },
          { "id": 3, "name": "CSS externo é usado apenas para JavaScript", "alias": "c" }
        ],
        "correct": "a",
        "category": "css"
      },
      {
        "id": 81,
        "question": "O que é a especificidade no CSS?",
        "options": [
          { "id": 1, "name": "A prioridade que um seletor tem sobre outro ao aplicar estilos", "alias": "a" },
          { "id": 2, "name": "Um método para organizar arquivos CSS", "alias": "b" },
          { "id": 3, "name": "Uma propriedade que define a cor do texto", "alias": "c" }
        ],
        "correct": "a",
        "category": "css"
      },
      {
        "id": 82,
        "question": "O que é um pseudo-elemento no CSS?",
        "options": [
          { "id": 1, "name": "Um elemento HTML que não pode ser estilizado", "alias": "a" },
          { "id": 2, "name": "Uma palavra-chave que permite estilizar partes específicas de um elemento", "alias": "b" },
          { "id": 3, "name": "Uma propriedade usada para definir animações", "alias": "c" }
        ],
        "correct": "b",
        "category": "css"
      },
      {
        "id": 83,
        "question": "Qual é a função do `z-index` no CSS?",
        "options": [
          { "id": 1, "name": "Definir a ordem de empilhamento dos elementos na página", "alias": "a" },
          { "id": 2, "name": "Alterar a opacidade dos elementos", "alias": "b" },
          { "id": 3, "name": "Definir a largura máxima de um elemento", "alias": "c" }
        ],
        "correct": "a",
        "category": "css"
      },
      {
        "id": 84,
        "question": "O que é o modelo de caixa (box model) no CSS?",
        "options": [
          { "id": 1, "name": "Uma estrutura que define como os elementos HTML são renderizados na página", "alias": "a" },
          { "id": 2, "name": "Um método para criar animações", "alias": "b" },
          { "id": 3, "name": "Uma propriedade usada para definir sombras", "alias": "c" }
        ],
        "correct": "a",
        "category": "css"
      },
      {
        "id": 85,
        "question": "Qual a diferença entre `relative`, `absolute` e `fixed` no posicionamento CSS?",
        "options": [
          { "id": 1, "name": "`relative` posiciona em relação ao local original, `absolute` em relação ao elemento pai e `fixed` em relação à janela", "alias": "a" },
          { "id": 2, "name": "Todos os três posicionam os elementos da mesma forma", "alias": "b" },
          { "id": 3, "name": "`fixed` e `absolute` são iguais, apenas `relative` é diferente", "alias": "c" }
        ],
        "correct": "a",
        "category": "css"
      },
      {
        "id": 86,
        "question": "O que são media queries no CSS?",
        "options": [
          { "id": 1, "name": "Regras que permitem aplicar estilos diferentes dependendo do tamanho da tela", "alias": "a" },
          { "id": 2, "name": "Uma técnica para otimizar imagens", "alias": "b" },
          { "id": 3, "name": "Um método para criar animações CSS", "alias": "c" }
        ],
        "correct": "a",
        "category": "css"
      },
      {
        "id": 87,
        "question": "Qual a função da propriedade `flex-grow` no Flexbox?",
        "options": [
          { "id": 1, "name": "Define a capacidade de um item crescer dentro do contêiner flexível", "alias": "a" },
          { "id": 2, "name": "Define a altura máxima de um elemento", "alias": "b" },
          { "id": 3, "name": "Define a opacidade do elemento", "alias": "c" }
        ],
        "correct": "a",
        "category": "css"
      },
      {
        "id": 88,
        "question": "O que é a propriedade `grid-template-columns` no CSS Grid?",
        "options": [
          { "id": 1, "name": "Define o número e tamanho das colunas em um layout de grade", "alias": "a" },
          { "id": 2, "name": "Define a cor de fundo das colunas", "alias": "b" },
          { "id": 3, "name": "Define a altura das linhas", "alias": "c" }
        ],
        "correct": "a",
        "category": "css"
      },  
      {
        "id": 89,
        "question": "O que é um sistema de controle de versão?",
        "options": [
          { "id": 1, "name": "Uma ferramenta que gerencia e registra alterações no código-fonte", "alias": "a" },
          { "id": 2, "name": "Um software para testar código antes da implantação", "alias": "b" },
          { "id": 3, "name": "Um método para compactar arquivos de código", "alias": "c" }
        ],
        "correct": "a",
        "category": "versionamento"
      },
      {
        "id": 90,
        "question": "Qual a função do comando `git clone`?",
        "options": [
          { "id": 1, "name": "Criar um novo repositório local a partir de um remoto", "alias": "a" },
          { "id": 2, "name": "Excluir um repositório remoto", "alias": "b" },
          { "id": 3, "name": "Mesclar alterações entre branches", "alias": "c" }
        ],
        "correct": "a",
        "category": "versionamento"
      },
      {
        "id": 91,
        "question": "O que é um rebase no Git?",
        "options": [
          { "id": 1, "name": "Uma técnica para reescrever o histórico de commits", "alias": "a" },
          { "id": 2, "name": "Um comando para excluir branches antigos", "alias": "b" },
          { "id": 3, "name": "Uma forma de compactar arquivos no repositório", "alias": "c" }
        ],
        "correct": "a",
        "category": "versionamento"
      },
      {
        "id": 92,
        "question": "Qual a diferença entre `git pull` e `git fetch`?",
        "options": [
          { "id": 1, "name": "`git pull` baixa e aplica as alterações, enquanto `git fetch` apenas baixa sem aplicar", "alias": "a" },
          { "id": 2, "name": "Ambos os comandos fazem exatamente a mesma coisa", "alias": "b" },
          { "id": 3, "name": "`git fetch` exclui arquivos antigos do repositório", "alias": "c" }
        ],
        "correct": "a",
        "category": "versionamento"
      },
      {
        "id": 93,
        "question": "O que é um commit revertido?",
        "options": [
          { "id": 1, "name": "Um commit que desfaz alterações anteriores sem remover o histórico", "alias": "a" },
          { "id": 2, "name": "Um commit que exclui permanentemente arquivos do repositório", "alias": "b" },
          { "id": 3, "name": "Um commit que mescla alterações de diferentes branches", "alias": "c" }
        ],
        "correct": "a",
        "category": "versionamento"
      },
      {
        "id": 94,
        "question": "Qual a função do arquivo `.gitignore`?",
        "options": [
          { "id": 1, "name": "Definir quais arquivos devem ser ignorados pelo Git", "alias": "a" },
          { "id": 2, "name": "Excluir arquivos do repositório remoto", "alias": "b" },
          { "id": 3, "name": "Criar um backup automático do código", "alias": "c" }
        ],
        "correct": "a",
        "category": "versionamento"
      },
      {
        "id": 95,
        "question": "O que acontece quando usamos `git stash`?",
        "options": [
          { "id": 1, "name": "Salva temporariamente alterações não commitadas para retomá-las depois", "alias": "a" },
          { "id": 2, "name": "Exclui todas as alterações não commitadas", "alias": "b" },
          { "id": 3, "name": "Cria um novo branch automaticamente", "alias": "c" }
        ],
        "correct": "a",
        "category": "versionamento"
      },
      {
        "id": 96,
        "question": "Qual a função do comando `git diff`?",
        "options": [
          { "id": 1, "name": "Exibir diferenças entre versões do código", "alias": "a" },
          { "id": 2, "name": "Excluir arquivos do repositório", "alias": "b" },
          { "id": 3, "name": "Criar um novo commit automaticamente", "alias": "c" }
        ],
        "correct": "a",
        "category": "versionamento"
      },
      {
        "id": 97,
        "question": "O que é um fork em sistemas de versionamento?",
        "options": [
          { "id": 1, "name": "Uma cópia independente de um repositório remoto", "alias": "a" },
          { "id": 2, "name": "Um comando para excluir branches antigos", "alias": "b" },
          { "id": 3, "name": "Uma técnica para compactar commits", "alias": "c" }
        ],
        "correct": "a",
        "category": "versionamento"
      },
      {
        "id": 98,
        "question": "Qual a importância do versionamento de código em projetos colaborativos?",
        "options": [
          { "id": 1, "name": "Facilita o rastreamento de alterações e colaboração entre desenvolvedores", "alias": "a" },
          { "id": 2, "name": "Impede que diferentes usuários acessem o mesmo código", "alias": "b" },
          { "id": 3, "name": "Remove automaticamente código duplicado", "alias": "c" }
        ],
        "correct": "a",
        "category": "versionamento"
      },     
      {
        "id": 99,
        "question": "O que é responsividade em desenvolvimento web?",
        "options": [
          { "id": 1, "name": "A capacidade de um site se adaptar a diferentes tamanhos de tela", "alias": "a" },
          { "id": 2, "name": "Um método para aumentar a velocidade de carregamento", "alias": "b" },
          { "id": 3, "name": "Uma técnica para criar animações interativas", "alias": "c" }
        ],
        "correct": "a",
        "category": "responsividade"
      },
      {
        "id": 100,
        "question": "Qual a função das media queries no CSS?",
        "options": [
          { "id": 1, "name": "Permitir a aplicação de estilos diferentes com base no tamanho da tela", "alias": "a" },
          { "id": 2, "name": "Criar animações CSS avançadas", "alias": "b" },
          { "id": 3, "name": "Definir a estrutura HTML de uma página", "alias": "c" }
        ],
        "correct": "a",
        "category": "responsividade"
      },
      {
        "id": 101,
        "question": "O que significa o conceito de 'mobile-first'?",
        "options": [
          { "id": 1, "name": "Desenvolver primeiro para dispositivos móveis e depois para telas maiores", "alias": "a" },
          { "id": 2, "name": "Criar sites exclusivamente para dispositivos móveis", "alias": "b" },
          { "id": 3, "name": "Priorizar animações em dispositivos móveis", "alias": "c" }
        ],
        "correct": "a",
        "category": "responsividade"
      },
      {
        "id": 102,
        "question": "Qual propriedade CSS pode ser usada para tornar imagens responsivas?",
        "options": [
          { "id": 1, "name": "`max-width: 100%`", "alias": "a" },
          { "id": 2, "name": "`position: absolute`", "alias": "b" },
          { "id": 3, "name": "`display: block`", "alias": "c" }
        ],
        "correct": "a",
        "category": "responsividade"
      },
      {
        "id": 103,
        "question": "O que é um layout fluido?",
        "options": [
          { "id": 1, "name": "Um layout que se ajusta dinamicamente ao tamanho da tela", "alias": "a" },
          { "id": 2, "name": "Um layout fixo que não muda de tamanho", "alias": "b" },
          { "id": 3, "name": "Um layout baseado apenas em pixels", "alias": "c" }
        ],
        "correct": "a",
        "category": "responsividade"
      },
      {
        "id": 104,
        "question": "Qual unidade de medida é mais recomendada para fontes em sites responsivos?",
        "options": [
          { "id": 1, "name": "rem", "alias": "a" },
          { "id": 2, "name": "px", "alias": "b" },
          { "id": 3, "name": "cm", "alias": "c" }
        ],
        "correct": "a",
        "category": "responsividade"
      },
      {
        "id": 105,
        "question": "O que é viewport no contexto de responsividade?",
        "options": [
          { "id": 1, "name": "A área visível de um site em um dispositivo", "alias": "a" },
          { "id": 2, "name": "Um elemento HTML usado para criar menus", "alias": "b" },
          { "id": 3, "name": "Uma propriedade CSS para definir cores", "alias": "c" }
        ],
        "correct": "a",
        "category": "responsividade"
      },
      {
        "id": 106,
        "question": "Qual meta tag é essencial para tornar um site responsivo?",
        "options": [
          { "id": 1, "name": "`<meta name='viewport' content='width=device-width, initial-scale=1.0'>`", "alias": "a" },
          { "id": 2, "name": "`<meta name='responsive' content='true'>`", "alias": "b" },
          { "id": 3, "name": "`<meta name='mobile' content='yes'>`", "alias": "c" }
        ],
        "correct": "a",
        "category": "responsividade"
      },
      {
        "id": 107,
        "question": "O que é um breakpoint em design responsivo?",
        "options": [
          { "id": 1, "name": "Um ponto onde o layout muda com base no tamanho da tela", "alias": "a" },
          { "id": 2, "name": "Um erro de código que impede a responsividade", "alias": "b" },
          { "id": 3, "name": "Uma técnica para criar animações CSS", "alias": "c" }
        ],
        "correct": "a",
        "category": "responsividade"
      },
      {
        "id": 108,
        "question": "Qual técnica pode ser usada para esconder elementos em telas menores?",
        "options": [
          { "id": 1, "name": "`display: none;`", "alias": "a" },
          { "id": 2, "name": "`visibility: hidden;`", "alias": "b" },
          { "id": 3, "name": "`opacity: 0;`", "alias": "c" }
        ],
        "correct": "a",
        "category": "responsividade"
      },      
      {
        "id": 109,
        "question": "O que é um layout adaptativo?",
        "options": [
          { "id": 1, "name": "Um layout que usa pontos de quebra para se ajustar a diferentes dispositivos", "alias": "a" },
          { "id": 2, "name": "Um layout fixo que não muda de tamanho", "alias": "b" },
          { "id": 3, "name": "Um layout baseado apenas em pixels", "alias": "c" }
        ],
        "correct": "a",
        "category": "responsividade"
      },
      {
        "id": 110,
        "question": "Qual a diferença entre design responsivo e design adaptativo?",
        "options": [
          { "id": 1, "name": "O design responsivo usa layouts fluidos, enquanto o adaptativo usa pontos de quebra fixos", "alias": "a" },
          { "id": 2, "name": "Ambos são exatamente iguais", "alias": "b" },
          { "id": 3, "name": "O design adaptativo é usado apenas para aplicativos móveis", "alias": "c" }
        ],
        "correct": "a",
        "category": "responsividade"
      },
      {
        "id": 111,
        "question": "Como o Flexbox pode ajudar na responsividade?",
        "options": [
          { "id": 1, "name": "Permite organizar elementos de forma flexível e adaptável ao tamanho da tela", "alias": "a" },
          { "id": 2, "name": "Cria animações responsivas automaticamente", "alias": "b" },
          { "id": 3, "name": "Define a largura fixa dos elementos", "alias": "c" }
        ],
        "correct": "a",
        "category": "responsividade"
    },
    {
      "id": 112,
      "question": "O que é a propriedade `object-fit` no CSS?",
      "options": [
        { "id": 1, "name": "Define como uma imagem deve se ajustar ao seu contêiner", "alias": "a" },
        { "id": 2, "name": "Define a opacidade de um elemento", "alias": "b" },
        { "id": 3, "name": "Cria sombras em elementos", "alias": "c" }
      ],
      "correct": "a",
      "category": "responsividade"
    },
    {
      "id": 113,
      "question": "Qual a importância do `min-width` e `max-width` na responsividade?",
      "options": [
        { "id": 1, "name": "Permitem definir limites mínimos e máximos para o tamanho de um elemento", "alias": "a" },
        { "id": 2, "name": "Aumentam a velocidade de carregamento da página", "alias": "b" },
        { "id": 3, "name": "Criam animações automáticas", "alias": "c" }
      ],
      "correct": "a",
      "category": "responsividade"
    },
    {
      "id": 114,
      "question": "Como o Grid Layout pode ser usado para criar layouts responsivos?",
      "options": [
        { "id": 1, "name": "Permite definir áreas flexíveis que se ajustam ao tamanho da tela", "alias": "a" },
        { "id": 2, "name": "Cria animações responsivas automaticamente", "alias": "b" },
        { "id": 3, "name": "Define a largura fixa dos elementos", "alias": "c" }
      ],
      "correct": "a",
      "category": "responsividade"
    },
    {
      "id": 115,
      "question": "O que é a técnica de 'lazy loading' e como ela impacta a responsividade?",
      "options": [
        { "id": 1, "name": "Carrega imagens e conteúdos apenas quando necessários, melhorando o desempenho", "alias": "a" },
        { "id": 2, "name": "Cria animações responsivas", "alias": "b" },
        { "id": 3, "name": "Aumenta o tamanho das imagens para telas maiores", "alias": "c" }
      ],
      "correct": "a",
      "category": "responsividade"
    },
    {
      "id": 116,
      "question": "O que é Scrum?",
      "options": [
        { "id": 1, "name": "Um framework ágil para gerenciamento de projetos", "alias": "a" },
        { "id": 2, "name": "Um software de desenvolvimento de código", "alias": "b" },
        { "id": 3, "name": "Um método de teste automatizado", "alias": "c" }
      ],
      "correct": "a",
      "category": "scrum"
    },
    {
      "id": 117,
      "question": "Quem é responsável por maximizar o valor do produto no Scrum?",
      "options": [
        { "id": 1, "name": "O Scrum Master", "alias": "a" },
        { "id": 2, "name": "O Product Owner", "alias": "b" },
        { "id": 3, "name": "O Time de Desenvolvimento", "alias": "c" }
      ],
      "correct": "b",
      "category": "scrum"
    },
    {
      "id": 118,
      "question": "O que é um Sprint no Scrum?",
      "options": [
        { "id": 1, "name": "Um período de tempo fixo para desenvolver um incremento do produto", "alias": "a" },
        { "id": 2, "name": "Uma reunião diária para discutir o progresso", "alias": "b" },
        { "id": 3, "name": "Um documento que define os requisitos do projeto", "alias": "c" }
      ],
      "correct": "a",
      "category": "scrum"
    },
    {
      "id": 119,
      "question": "Qual é a função do Scrum Master?",
      "options": [
        { "id": 1, "name": "Garantir que o Scrum seja compreendido e aplicado corretamente", "alias": "a" },
        { "id": 2, "name": "Definir os requisitos do produto", "alias": "b" },
        { "id": 3, "name": "Codificar e testar o software", "alias": "c" }
      ],
      "correct": "a",
      "category": "scrum"
    },
    {
      "id": 120,
      "question": "O que é um Product Backlog?",
      "options": [
        { "id": 1, "name": "Uma lista priorizada de funcionalidades e requisitos do produto", "alias": "a" },
        { "id": 2, "name": "Um documento de planejamento financeiro", "alias": "b" },
        { "id": 3, "name": "Uma ferramenta de controle de qualidade", "alias": "c" }
      ],
      "correct": "a",
      "category": "scrum"
    },
    {
      "id": 121,
      "question": "O que acontece na Sprint Planning?",
      "options": [
        { "id": 1, "name": "O Time Scrum define quais itens do Product Backlog serão trabalhados na Sprint", "alias": "a" },
        { "id": 2, "name": "O Scrum Master revisa o código do projeto", "alias": "b" },
        { "id": 3, "name": "Os desenvolvedores apresentam o produto final ao cliente", "alias": "c" }
      ],
      "correct": "a",
      "category": "scrum"
    },
    {
      "id": 122,
      "question": "Qual é o objetivo da Daily Scrum?",
      "options": [
        { "id": 1, "name": "Sincronizar as atividades do Time de Desenvolvimento e identificar impedimentos", "alias": "a" },
        { "id": 2, "name": "Definir novos requisitos para o produto", "alias": "b" },
        { "id": 3, "name": "Encerrar a Sprint e revisar os resultados", "alias": "c" }
      ],
      "correct": "a",
      "category": "scrum"
    },
    {
      "id": 123,
      "question": "O que é um Sprint Backlog?",
      "options": [
        { "id": 1, "name": "Uma lista de tarefas selecionadas para serem desenvolvidas na Sprint", "alias": "a" },
        { "id": 2, "name": "Um relatório de progresso do projeto", "alias": "b" },
        { "id": 3, "name": "Uma ferramenta de controle de qualidade", "alias": "c" }
      ],
      "correct": "a",
      "category": "scrum"
    },
    {
      "id": 124,
      "question": "O que acontece na Sprint Review?",
      "options": [
        { "id": 1, "name": "O Time Scrum apresenta o incremento do produto para os stakeholders", "alias": "a" },
        { "id": 2, "name": "Os desenvolvedores revisam o código do projeto", "alias": "b" },
        { "id": 3, "name": "O Scrum Master define os próximos passos do projeto", "alias": "c" }
      ],
      "correct": "a",
      "category": "scrum"
    },
    {
      "id": 125,
      "question": "Qual é o objetivo da Sprint Retrospective?",
      "options": [
        { "id": 1, "name": "Identificar melhorias no processo e aumentar a eficiência do Time Scrum", "alias": "a" },
        { "id": 2, "name": "Definir novos requisitos para o produto", "alias": "b" },
        { "id": 3, "name": "Encerrar oficialmente o projeto", "alias": "c" }
      ],
      "correct": "a",
      "category": "scrum"
    },      
    {
      "id": 126,
      "question": "O que é um artefato no Scrum?",
      "options": [
        { "id": 1, "name": "Um elemento essencial para transparência e inspeção no processo Scrum", "alias": "a" },
        { "id": 2, "name": "Um documento de requisitos do projeto", "alias": "b" },
        { "id": 3, "name": "Uma ferramenta de controle de qualidade", "alias": "c" }
      ],
      "correct": "a",
      "category": "scrum"
    },
    {
      "id": 127,
      "question": "Qual é a função do Incremento no Scrum?",
      "options": [
        { "id": 1, "name": "Representar a soma de todos os itens do Product Backlog concluídos durante a Sprint", "alias": "a" },
        { "id": 2, "name": "Definir os requisitos do produto", "alias": "b" },
        { "id": 3, "name": "Criar um novo Sprint Backlog", "alias": "c" }
      ],
      "correct": "a",
      "category": "scrum"
    },
    {
      "id": 128,
      "question": "O que é um Definition of Done (DoD) no Scrum?",
      "options": [
        { "id": 1, "name": "Um conjunto de critérios que define quando um item do backlog está concluído", "alias": "a" },
        { "id": 2, "name": "Uma lista de tarefas pendentes", "alias": "b" },
        { "id": 3, "name": "Um documento de planejamento financeiro", "alias": "c" }
      ],
      "correct": "a",
      "category": "scrum"
    },
    {
      "id": 129,
      "question": "Qual é o papel do Time de Desenvolvimento no Scrum?",
      "options": [
        { "id": 1, "name": "Criar incrementos de produto potencialmente utilizáveis a cada Sprint", "alias": "a" },
        { "id": 2, "name": "Gerenciar o Product Backlog", "alias": "b" },
        { "id": 3, "name": "Definir os objetivos do projeto", "alias": "c" }
      ],
      "correct": "a",
      "category": "scrum"
    },
    {
      "id": 130,
      "question": "O que é um Sprint Goal?",
      "options": [
        { "id": 1, "name": "Um objetivo que orienta o trabalho do Time de Desenvolvimento durante a Sprint", "alias": "a" },
        { "id": 2, "name": "Uma lista de tarefas pendentes", "alias": "b" },
        { "id": 3, "name": "Um relatório de progresso do projeto", "alias": "c" }
      ],
      "correct": "a",
      "category": "scrum"
    },
    {
      "id": 131,
      "question": "Qual é a importância da transparência no Scrum?",
      "options": [
        { "id": 1, "name": "Permitir que todos os envolvidos tenham uma visão clara do progresso e dos desafios do projeto", "alias": "a" },
        { "id": 2, "name": "Garantir que apenas o Scrum Master tenha controle sobre o projeto", "alias": "b" },
        { "id": 3, "name": "Evitar que o Product Owner participe das decisões", "alias": "c" }
      ],
      "correct": "a",
      "category": "scrum"
    },
    {
      "id": 132,
      "question": "O que é um Burndown Chart no Scrum?",
      "options": [
        { "id": 1, "name": "Um gráfico que mostra o progresso do trabalho restante ao longo do tempo", "alias": "a" },
        { "id": 2, "name": "Uma ferramenta para estimar custos do projeto", "alias": "b" },
        { "id": 3, "name": "Um documento de planejamento estratégico", "alias": "c" }
      ],
      "correct": "a",
      "category": "scrum"
    },
    {
      "id": 133,
      "question": "Qual é a função do Refinamento do Backlog no Scrum?",
      "options": [
        { "id": 1, "name": "Ajustar e detalhar os itens do Product Backlog para futuras Sprints", "alias": "a" },
        { "id": 2, "name": "Definir os objetivos do projeto", "alias": "b" },
        { "id": 3, "name": "Criar um novo Sprint Backlog", "alias": "c" }
      ],
      "correct": "a",
      "category": "scrum"
    },
    {
      "id": 134,
      "question": "O que significa inspeção e adaptação no Scrum?",
      "options": [
        { "id": 1, "name": "Revisar continuamente o progresso e ajustar o processo conforme necessário", "alias": "a" },
        { "id": 2, "name": "Definir um plano fixo sem possibilidade de mudanças", "alias": "b" },
        { "id": 3, "name": "Criar um novo Product Backlog", "alias": "c" }
      ],
      "correct": "a",
      "category": "scrum"
    },
    {
      "id": 135,
      "question": "Qual é a importância da auto-organização no Time Scrum?",
      "options": [
        { "id": 1, "name": "Permitir que o Time de Desenvolvimento tome decisões sobre como realizar o trabalho", "alias": "a" },
        { "id": 2, "name": "Garantir que o Scrum Master controle todas as tarefas", "alias": "b" },
        { "id": 3, "name": "Evitar que o Product Owner participe das decisões", "alias": "c" }
      ],
      "correct": "a",
      "category": "scrum"
    },      
    {
      "id": 136,
      "question": "O que é DevOps?",
      "options": [
        { "id": 1, "name": "Uma cultura e conjunto de práticas que integram desenvolvimento e operações", "alias": "a" },
        { "id": 2, "name": "Um framework para desenvolvimento de software", "alias": "b" },
        { "id": 3, "name": "Uma linguagem de programação para automação", "alias": "c" }
      ],
      "correct": "a",
      "category": "devops"
    },
    {
      "id": 137,
      "question": "Quais são os principais benefícios do DevOps?",
      "options": [
        { "id": 1, "name": "Entrega contínua, maior colaboração e automação de processos", "alias": "a" },
        { "id": 2, "name": "Redução da necessidade de testes", "alias": "b" },
        { "id": 3, "name": "Eliminação da necessidade de infraestrutura", "alias": "c" }
      ],
      "correct": "a",
      "category": "devops"
    },
    {
      "id": 138,
      "question": "O que é integração contínua (CI) no DevOps?",
      "options": [
        { "id": 1, "name": "Um processo de automação para integrar código frequentemente", "alias": "a" },
        { "id": 2, "name": "Uma técnica para testar código manualmente", "alias": "b" },
        { "id": 3, "name": "Um método para criar bancos de dados", "alias": "c" }
      ],
      "correct": "a",
      "category": "devops"
    },
    {
      "id": 139,
      "question": "O que é entrega contínua (CD) no DevOps?",
      "options": [
        { "id": 1, "name": "Automatização do processo de entrega de software para produção", "alias": "a" },
        { "id": 2, "name": "Uma técnica para criar interfaces gráficas", "alias": "b" },
        { "id": 3, "name": "Um método para gerenciar bancos de dados", "alias": "c" }
      ],
      "correct": "a",
      "category": "devops"
    },
    {
      "id": 140,
      "question": "Qual é a importância da automação no DevOps?",
      "options": [
        { "id": 1, "name": "Reduz erros humanos e melhora a eficiência dos processos", "alias": "a" },
        { "id": 2, "name": "Elimina a necessidade de testes", "alias": "b" },
        { "id": 3, "name": "Substitui completamente os desenvolvedores", "alias": "c" }
      ],
      "correct": "a",
      "category": "devops"
    },
    {
      "id": 141,
      "question": "O que é um pipeline de CI/CD?",
      "options": [
        { "id": 1, "name": "Um conjunto de etapas automatizadas para integração e entrega contínua", "alias": "a" },
        { "id": 2, "name": "Um método para criar interfaces de usuário", "alias": "b" },
        { "id": 3, "name": "Uma técnica para gerenciar bancos de dados", "alias": "c" }
      ],
      "correct": "a",
      "category": "devops"
    },
    {
      "id": 142,
      "question": "Quais são algumas ferramentas populares usadas em DevOps?",
      "options": [
        { "id": 1, "name": "Jenkins, Docker, Kubernetes, Ansible e Git", "alias": "a" },
        { "id": 2, "name": "Photoshop, Illustrator e After Effects", "alias": "b" },
        { "id": 3, "name": "Excel, Word e PowerPoint", "alias": "c" }
      ],
      "correct": "a",
      "category": "devops"
    },
    {
      "id": 143,
      "question": "O que é monitoramento no DevOps?",
      "options": [
        { "id": 1, "name": "A prática de acompanhar o desempenho e a saúde dos sistemas", "alias": "a" },
        { "id": 2, "name": "Um método para criar relatórios financeiros", "alias": "b" },
        { "id": 3, "name": "Uma técnica para gerenciar bancos de dados", "alias": "c" }
      ],
      "correct": "a",
      "category": "devops"
    },
    {
      "id": 144,
      "question": "O que é infraestrutura como código (IaC)?",
      "options": [
        { "id": 1, "name": "Uma abordagem para gerenciar infraestrutura por meio de código", "alias": "a" },
        { "id": 2, "name": "Um método para criar interfaces gráficas", "alias": "b" },
        { "id": 3, "name": "Uma técnica para gerenciar bancos de dados", "alias": "c" }
      ],
      "correct": "a",
      "category": "devops"
    },
    {
      "id": 145,
      "question": "Qual é o papel do DevOps na segurança?",
      "options": [
        { "id": 1, "name": "Integrar práticas de segurança ao longo do ciclo de desenvolvimento", "alias": "a" },
        { "id": 2, "name": "Eliminar a necessidade de testes de segurança", "alias": "b" },
        { "id": 3, "name": "Substituir completamente os analistas de segurança", "alias": "c" }
      ],
      "correct": "a",
      "category": "devops"
    },      
    {
      "id": 146,
      "question": "O que é criptografia?",
      "options": [
        { "id": 1, "name": "Um método de codificação de informações para garantir sua segurança", "alias": "a" },
        { "id": 2, "name": "Uma técnica de armazenamento de dados", "alias": "b" },
        { "id": 3, "name": "Um processo de compressão de arquivos", "alias": "c" }
      ],
      "correct": "a",
      "category": "criptografia"
    },
    {
      "id": 147,
      "question": "Qual é o principal objetivo da criptografia?",
      "options": [
        { "id": 1, "name": "Garantir a privacidade e integridade das informações", "alias": "a" },
        { "id": 2, "name": "Reduzir o tamanho dos arquivos", "alias": "b" },
        { "id": 3, "name": "Acelerar a transmissão de dados", "alias": "c" }
      ],
      "correct": "a",
      "category": "criptografia"
    },
    {
      "id": 148,
      "question": "Qual dos seguintes termos está relacionado à criptografia simétrica?",
      "options": [
        { "id": 1, "name": "Uma única chave usada para criptografar e descriptografar", "alias": "a" },
        { "id": 2, "name": "Chave pública e chave privada", "alias": "b" },
        { "id": 3, "name": "Autenticação baseada em assinatura digital", "alias": "c" }
      ],
      "correct": "a",
      "category": "criptografia"
    },
    {
      "id": 149,
      "question": "Qual é a principal característica da criptografia assimétrica?",
      "options": [
        { "id": 1, "name": "Usa uma chave pública para criptografar e uma chave privada para descriptografar", "alias": "a" },
        { "id": 2, "name": "Usa a mesma chave para criptografar e descriptografar os dados", "alias": "b" },
        { "id": 3, "name": "Não necessita de chave para criptografar os dados", "alias": "c" }
      ],
      "correct": "a",
      "category": "criptografia"
    },
    {
      "id": 150,
      "question": "Qual é a função principal de um protocolo criptográfico?",
      "options": [
        { "id": 1, "name": "Estabelecer regras e métodos para realizar a criptografia e garantir a segurança das comunicações", "alias": "a" },
        { "id": 2, "name": "Gerenciar a quantidade de dados transmitidos", "alias": "b" },
        { "id": 3, "name": "Controlar os erros durante a comunicação de dados", "alias": "c" }
      ],
      "correct": "a",
      "category": "criptografia"
    },
    {
      "id": 151,
      "question": "O que é uma chave de criptografia?",
      "options": [
        { "id": 1, "name": "Uma sequência de caracteres usada para criptografar ou descriptografar dados", "alias": "a" },
        { "id": 2, "name": "Um código que permite a compactação dos dados", "alias": "b" },
        { "id": 3, "name": "Um identificador de usuários no sistema", "alias": "c" }
      ],
      "correct": "a",
      "category": "criptografia"
    },
    {
      "id": 152,
      "question": "Qual é o principal protocolo criptográfico usado em redes de comunicação seguras?",
      "options": [
        { "id": 1, "name": "SSL/TLS (Secure Sockets Layer / Transport Layer Security)", "alias": "a" },
        { "id": 2, "name": "SMTP (Simple Mail Transfer Protocol)", "alias": "b" },
        { "id": 3, "name": "HTTP (HyperText Transfer Protocol)", "alias": "c" }
      ],
      "correct": "a",
      "category": "criptografia"
    },
    {
      "id": 153,
      "question": "O que é criptografia de ponta a ponta?",
      "options": [
        { "id": 1, "name": "Um método que garante que apenas o remetente e o destinatário possam acessar os dados", "alias": "a" },
        { "id": 2, "name": "Uma técnica para compactar arquivos antes da transmissão", "alias": "b" },
        { "id": 3, "name": "Um protocolo para acelerar a comunicação de dados", "alias": "c" }
      ],
      "correct": "a",
      "category": "criptografia"
    },
    {
      "id": 154,
      "question": "O que é um ataque de força bruta na criptografia?",
      "options": [
        { "id": 1, "name": "Uma tentativa de descobrir uma chave criptográfica testando todas as combinações possíveis", "alias": "a" },
        { "id": 2, "name": "Um método para acelerar a criptografia de dados", "alias": "b" },
        { "id": 3, "name": "Uma técnica para compactar arquivos criptografados", "alias": "c" }
      ],
      "correct": "a",
      "category": "criptografia"
    },
    {
      "id": 155,
      "question": "O que é um ataque de replay na criptografia?",
      "options": [
        { "id": 1, "name": "Uma técnica onde um invasor intercepta e retransmite dados para enganar o sistema", "alias": "a" },
        { "id": 2, "name": "Um método para acelerar a criptografia de dados", "alias": "b" },
        { "id": 3, "name": "Uma técnica para compactar arquivos criptografados", "alias": "c" }
      ],
      "correct": "a",
      "category": "criptografia"
    },
    {
      "id": 156,
      "question": "O que é um hash criptográfico?",
      "options": [
        { "id": 1, "name": "Uma função que transforma dados em um valor fixo e irreversível", "alias": "a" },
        { "id": 2, "name": "Um método para compactar arquivos", "alias": "b" },
        { "id": 3, "name": "Uma técnica de armazenamento de dados", "alias": "c" }
      ],
      "correct": "a",
      "category": "criptografia"
    },
    {
      "id": 157,
      "question": "Qual é a função da criptografia em blockchain?",
      "options": [
        { "id": 1, "name": "Garantir a segurança e integridade das transações registradas", "alias": "a" },
        { "id": 2, "name": "Compactar os blocos de dados", "alias": "b" },
        { "id": 3, "name": "Acelerar a transmissão de informações", "alias": "c" }
      ],
      "correct": "a",
      "category": "criptografia"
    },
    {
      "id": 158,
      "question": "O que é um certificado digital?",
      "options": [
        { "id": 1, "name": "Um documento eletrônico que autentica a identidade de um usuário ou site", "alias": "a" },
        { "id": 2, "name": "Um código usado para compactar arquivos", "alias": "b" },
        { "id": 3, "name": "Uma técnica de armazenamento de dados", "alias": "c" }
      ],
      "correct": "a",
      "category": "criptografia"
    },
    {
      "id": 159,
      "question": "O que é um ataque de replay na criptografia?",
      "options": [
        { "id": 1, "name": "Uma técnica onde um invasor intercepta e retransmite dados para enganar o sistema", "alias": "a" },
        { "id": 2, "name": "Um método para acelerar a criptografia de dados", "alias": "b" },
        { "id": 3, "name": "Uma técnica para compactar arquivos criptografados", "alias": "c" }
      ],
      "correct": "a",
      "category": "criptografia"
    },
    {
      "id": 160,
      "question": "O que é um hash criptográfico?",
      "options": [
        { "id": 1, "name": "Uma função que transforma dados em um valor fixo e irreversível", "alias": "a" },
        { "id": 2, "name": "Um método para compactar arquivos", "alias": "b" },
        { "id": 3, "name": "Uma técnica de armazenamento de dados", "alias": "c" }
      ],
      "correct": "a",
      "category": "criptografia"
    },
    {
      "id": 161,
      "question": "Qual é a função da criptografia em blockchain?",
      "options": [
        { "id": 1, "name": "Garantir a segurança e integridade das transações registradas", "alias": "a" },
        { "id": 2, "name": "Compactar os blocos de dados", "alias": "b" },
        { "id": 3, "name": "Acelerar a transmissão de informações", "alias": "c" }
      ],
      "correct": "a",
      "category": "criptografia"
    },
    {
      "id": 162,
      "question": "O que é um ataque de força bruta?",
      "options": [
        { "id": 1, "name": "Uma tentativa de descobrir uma chave criptográfica testando todas as combinações possíveis", "alias": "a" },
        { "id": 2, "name": "Um método para acelerar a criptografia de dados", "alias": "b" },
        { "id": 3, "name": "Uma técnica para compactar arquivos criptografados", "alias": "c" }
      ],
      "correct": "a",
      "category": "criptografia"
    },
    {
      "id": 163,
      "question": "O que é um ataque de man-in-the-middle?",
      "options": [
        { "id": 1, "name": "Uma técnica onde um invasor intercepta e altera a comunicação entre duas partes", "alias": "a" },
        { "id": 2, "name": "Um método para acelerar a criptografia de dados", "alias": "b" },
        { "id": 3, "name": "Uma técnica para compactar arquivos criptografados", "alias": "c" }
      ],
      "correct": "a",
      "category": "criptografia"
    },
    {
      "id": 164,
      "question": "Qual é a importância da criptografia em comunicações seguras?",
      "options": [
        { "id": 1, "name": "Protege dados contra acessos não autorizados e garante a privacidade", "alias": "a" },
        { "id": 2, "name": "Acelera a transmissão de informações", "alias": "b" },
        { "id": 3, "name": "Reduz o tamanho dos arquivos", "alias": "c" }
      ],
      "correct": "a",
      "category": "criptografia"
    },
    {
      "id": 165,
      "question": "O que é criptografia homomórfica?",
      "options": [
        { "id": 1, "name": "Uma técnica que permite realizar operações sobre dados criptografados sem precisar descriptografá-los", "alias": "a" },
        { "id": 2, "name": "Um método para compactar arquivos criptografados", "alias": "b" },
        { "id": 3, "name": "Uma técnica de armazenamento de dados", "alias": "c" }
      ],
      "correct": "a",
      "category": "criptografia"
    },      
    {
      "id": 166,
      "question": "O que é Micro Front-End?",
      "options": [
        { "id": 1, "name": "Uma abordagem para dividir aplicações front-end em módulos independentes", "alias": "a" },
        { "id": 2, "name": "Um framework para desenvolvimento de aplicações web", "alias": "b" },
        { "id": 3, "name": "Uma técnica para otimizar imagens em páginas web", "alias": "c" }
      ],
      "correct": "a",
      "category": "micro-front-end"
    },
    {
      "id": 167,
      "question": "Qual é o principal objetivo do Micro Front-End?",
      "options": [
        { "id": 1, "name": "Permitir que diferentes equipes desenvolvam partes do front-end de forma independente", "alias": "a" },
        { "id": 2, "name": "Reduzir o tamanho dos arquivos CSS", "alias": "b" },
        { "id": 3, "name": "Melhorar a performance de bancos de dados", "alias": "c" }
      ],
      "correct": "a",
      "category": "micro-front-end"
    },
    {
      "id": 168,
      "question": "Quais são as vantagens do Micro Front-End?",
      "options": [
        { "id": 1, "name": "Escalabilidade, independência de equipes e facilidade de manutenção", "alias": "a" },
        { "id": 2, "name": "Redução da necessidade de testes automatizados", "alias": "b" },
        { "id": 3, "name": "Eliminação da necessidade de versionamento de código", "alias": "c" }
      ],
      "correct": "a",
      "category": "micro-front-end"
    },
    {
      "id": 169,
      "question": "Qual tecnologia pode ser usada para implementar Micro Front-End?",
      "options": [
        { "id": 1, "name": "Web Components", "alias": "a" },
        { "id": 2, "name": "SQL", "alias": "b" },
        { "id": 3, "name": "Bootstrap", "alias": "c" }
      ],
      "correct": "a",
      "category": "micro-front-end"
    },
    {
      "id": 170,
      "question": "Como os Micro Front-Ends se comunicam entre si?",
      "options": [
        { "id": 1, "name": "Por meio de eventos e mensagens entre módulos", "alias": "a" },
        { "id": 2, "name": "Apenas por meio de bancos de dados", "alias": "b" },
        { "id": 3, "name": "Usando arquivos estáticos", "alias": "c" }
      ],
      "correct": "a",
      "category": "micro-front-end"
    },
    {
      "id": 171,
      "question": "Quais são os desafios ao implementar Micro Front-End?",
      "options": [
        { "id": 1, "name": "Gerenciamento de estado, comunicação entre módulos e padronização de estilos", "alias": "a" },
        { "id": 2, "name": "Redução da necessidade de testes automatizados", "alias": "b" },
        { "id": 3, "name": "Eliminação da necessidade de versionamento de código", "alias": "c" }
      ],
      "correct": "a",
      "category": "micro-front-end"
    },
    {
      "id": 172,
      "question": "Qual é a relação entre Micro Front-End e Microservices?",
      "options": [
        { "id": 1, "name": "Micro Front-End aplica os princípios de Microservices ao desenvolvimento front-end", "alias": "a" },
        { "id": 2, "name": "Microservices são usados apenas para back-end", "alias": "b" },
        { "id": 3, "name": "Micro Front-End substitui completamente os Microservices", "alias": "c" }
      ],
      "correct": "a",
      "category": "micro-front-end"
    },
    {
      "id": 173,
      "question": "Como o Micro Front-End pode impactar a experiência do usuário?",
      "options": [
        { "id": 1, "name": "Pode melhorar a performance e permitir atualizações mais rápidas", "alias": "a" },
        { "id": 2, "name": "Reduz a necessidade de testes automatizados", "alias": "b" },
        { "id": 3, "name": "Elimina a necessidade de versionamento de código", "alias": "c" }
      ],
      "correct": "a",
      "category": "micro-front-end"
    },
    {
      "id": 174,
      "question": "Quais são as abordagens para integrar Micro Front-Ends?",
      "options": [
        { "id": 1, "name": "Iframe, Web Components e Single SPA", "alias": "a" },
        { "id": 2, "name": "Apenas usando bancos de dados", "alias": "b" },
        { "id": 3, "name": "Usando arquivos estáticos", "alias": "c" }
      ],
      "correct": "a",
      "category": "micro-front-end"
    },
    {
      "id": 175,
      "question": "Quando é recomendado usar Micro Front-End?",
      "options": [
        { "id": 1, "name": "Quando há múltiplas equipes trabalhando em um mesmo projeto de forma independente", "alias": "a" },
        { "id": 2, "name": "Quando o projeto não precisa de modularização", "alias": "b" },
        { "id": 3, "name": "Quando o front-end é pequeno e simples", "alias": "c" }
      ],
      "correct": "a",
      "category": "micro-front-end"
    },      
    {
      "id": 176,
      "question": "O que diferencia Micro Front-End de uma arquitetura monolítica?",
      "options": [
        { "id": 1, "name": "Micro Front-End divide a aplicação em módulos independentes, enquanto a arquitetura monolítica centraliza tudo em um único código", "alias": "a" },
        { "id": 2, "name": "Microservices são usados apenas para back-end", "alias": "b" },
        { "id": 3, "name": "Micro Front-End elimina completamente a necessidade de um back-end", "alias": "c" }
      ],
      "correct": "a",
      "category": "micro-front-end"
    },
    {
      "id": 177,
      "question": "Como os Micro Front-Ends podem ser carregados em uma aplicação?",
      "options": [
        { "id": 1, "name": "Por meio de módulos independentes carregados dinamicamente", "alias": "a" },
        { "id": 2, "name": "Apenas por meio de bancos de dados", "alias": "b" },
        { "id": 3, "name": "Usando arquivos estáticos", "alias": "c" }
      ],
      "correct": "a",
      "category": "micro-front-end"
    },
    {
      "id": 178,
      "question": "Quais são os principais desafios ao adotar Micro Front-End?",
      "options": [
        { "id": 1, "name": "Gerenciamento de estado, comunicação entre módulos e padronização de estilos", "alias": "a" },
        { "id": 2, "name": "Redução da necessidade de testes automatizados", "alias": "b" },
        { "id": 3, "name": "Eliminação da necessidade de versionamento de código", "alias": "c" }
      ],
      "correct": "a",
      "category": "micro-front-end"
    },
    {
      "id": 179,
      "question": "Qual abordagem pode ser usada para compartilhar estado entre Micro Front-Ends?",
      "options": [
        { "id": 1, "name": "Usando um gerenciador de estado global como Redux ou eventos customizados", "alias": "a" },
        { "id": 2, "name": "Apenas por meio de bancos de dados", "alias": "b" },
        { "id": 3, "name": "Usando arquivos estáticos", "alias": "c" }
      ],
      "correct": "a",
      "category": "micro-front-end"
    },
    {
      "id": 180,
      "question": "Como garantir a consistência visual entre diferentes Micro Front-Ends?",
      "options": [
        { "id": 1, "name": "Utilizando uma biblioteca de componentes compartilhada e padronização de estilos", "alias": "a" },
        { "id": 2, "name": "Criando estilos independentes para cada módulo", "alias": "b" },
        { "id": 3, "name": "Evitando o uso de CSS", "alias": "c" }
      ],
      "correct": "a",
      "category": "micro-front-end"
    },
    {
      "id": 181,
      "question": "Quais são as formas de integrar Micro Front-Ends em uma aplicação?",
      "options": [
        { "id": 1, "name": "Iframe, Web Components e Single SPA", "alias": "a" },
        { "id": 2, "name": "Apenas usando bancos de dados", "alias": "b" },
        { "id": 3, "name": "Usando arquivos estáticos", "alias": "c" }
      ],
      "correct": "a",
      "category": "micro-front-end"
    },
    {
      "id": 182,
      "question": "Como o Micro Front-End pode impactar a performance da aplicação?",
      "options": [
        { "id": 1, "name": "Pode aumentar o tempo de carregamento devido à necessidade de carregar múltiplos módulos", "alias": "a" },
        { "id": 2, "name": "Reduz a necessidade de testes automatizados", "alias": "b" },
        { "id": 3, "name": "Elimina a necessidade de versionamento de código", "alias": "c" }
      ],
      "correct": "a",
      "category": "micro-front-end"
    },
    {
      "id": 183,
      "question": "Qual é a importância da comunicação entre Micro Front-Ends?",
      "options": [
        { "id": 1, "name": "Permite que diferentes módulos troquem informações e mantenham a aplicação sincronizada", "alias": "a" },
        { "id": 2, "name": "Evita que os módulos sejam carregados corretamente", "alias": "b" },
        { "id": 3, "name": "Elimina a necessidade de um back-end", "alias": "c" }
      ],
      "correct": "a",
      "category": "micro-front-end"
    },
    {
      "id": 184,
      "question": "Quais são os benefícios de usar Web Components em Micro Front-End?",
      "options": [
        { "id": 1, "name": "Permite criar componentes reutilizáveis e independentes de framework", "alias": "a" },
        { "id": 2, "name": "Reduz a necessidade de testes automatizados", "alias": "b" },
        { "id": 3, "name": "Elimina a necessidade de versionamento de código", "alias": "c" }
      ],
      "correct": "a",
      "category": "micro-front-end"
    },
    {
      "id": 185,
      "question": "Quando **não** é recomendado usar Micro Front-End?",
      "options": [
        { "id": 1, "name": "Quando a aplicação é pequena e não há necessidade de modularização", "alias": "a" },
        { "id": 2, "name": "Quando há múltiplas equipes trabalhando em um mesmo projeto de forma independente", "alias": "b" },
        { "id": 3, "name": "Quando o front-end precisa ser altamente escalável", "alias": "c" }
      ],
      "correct": "a",
      "category": "micro-front-end"
    },      
    {
      "id": 186,
      "question": "O que são testes unitários?",
      "options": [
        { "id": 1, "name": "Uma técnica de teste que verifica o funcionamento de pequenas partes do código isoladamente", "alias": "a" },
        { "id": 2, "name": "Um método para testar a aplicação completa", "alias": "b" },
        { "id": 3, "name": "Uma abordagem para testar apenas a interface gráfica", "alias": "c" }
      ],
      "correct": "a",
      "category": "testes-unitarios"
    },
    {
      "id": 187,
      "question": "Qual é o principal objetivo dos testes unitários?",
      "options": [
        { "id": 1, "name": "Garantir que cada unidade de código funcione corretamente de forma isolada", "alias": "a" },
        { "id": 2, "name": "Testar a integração entre diferentes módulos", "alias": "b" },
        { "id": 3, "name": "Validar a experiência do usuário", "alias": "c" }
      ],
      "correct": "a",
      "category": "testes-unitarios"
    },
    {
      "id": 188,
      "question": "Quais são as vantagens de usar testes unitários?",
      "options": [
        { "id": 1, "name": "Facilitam a manutenção do código e reduzem erros em produção", "alias": "a" },
        { "id": 2, "name": "Aumentam o tempo de desenvolvimento", "alias": "b" },
        { "id": 3, "name": "Eliminam a necessidade de testes automatizados", "alias": "c" }
      ],
      "correct": "a",
      "category": "testes-unitarios"
    },
    {
      "id": 189,
      "question": "O que é um mock em testes unitários?",
      "options": [
        { "id": 1, "name": "Um objeto simulado que imita o comportamento de dependências externas", "alias": "a" },
        { "id": 2, "name": "Um erro encontrado durante a execução dos testes", "alias": "b" },
        { "id": 3, "name": "Uma técnica para testar interfaces gráficas", "alias": "c" }
      ],
      "correct": "a",
      "category": "testes-unitarios"
    },
    {
      "id": 190,
      "question": "Qual ferramenta é amplamente utilizada para testes unitários em Java?",
      "options": [
        { "id": 1, "name": "JUnit", "alias": "a" },
        { "id": 2, "name": "Selenium", "alias": "b" },
        { "id": 3, "name": "Postman", "alias": "c" }
      ],
      "correct": "a",
      "category": "testes-unitarios"
    },
    {
      "id": 191,
      "question": "O que significa TDD (Test-Driven Development)?",
      "options": [
        { "id": 1, "name": "Uma abordagem de desenvolvimento onde os testes são escritos antes do código", "alias": "a" },
        { "id": 2, "name": "Uma técnica para testar interfaces gráficas", "alias": "b" },
        { "id": 3, "name": "Um método para testar apenas a experiência do usuário", "alias": "c" }
      ],
      "correct": "a",
      "category": "testes-unitarios"
    },
    {
      "id": 192,
      "question": "Qual é a diferença entre testes unitários e testes de integração?",
      "options": [
        { "id": 1, "name": "Testes unitários verificam partes isoladas do código, enquanto testes de integração validam a comunicação entre módulos", "alias": "a" },
        { "id": 2, "name": "Testes unitários são aplicados apenas em interfaces gráficas", "alias": "b" },
        { "id": 3, "name": "Testes de integração são usados apenas para bancos de dados", "alias": "c" }
      ],
      "correct": "a",
      "category": "testes-unitarios"
    },
    {
      "id": 193,
      "question": "Por que é importante automatizar testes unitários?",
      "options": [
        { "id": 1, "name": "Para garantir que os testes sejam executados de forma consistente e rápida", "alias": "a" },
        { "id": 2, "name": "Para eliminar a necessidade de revisão de código", "alias": "b" },
        { "id": 3, "name": "Para reduzir a necessidade de versionamento de código", "alias": "c" }
      ],
      "correct": "a",
      "category": "testes-unitarios"
    },
    {
      "id": 194,
      "question": "O que é cobertura de testes?",
      "options": [
        { "id": 1, "name": "A porcentagem do código que é testada por testes unitários", "alias": "a" },
        { "id": 2, "name": "Um relatório de erros encontrados durante os testes", "alias": "b" },
        { "id": 3, "name": "Uma técnica para testar interfaces gráficas", "alias": "c" }
      ],
      "correct": "a",
      "category": "testes-unitarios"
    },
    {
      "id": 195,
      "question": "Qual é a melhor prática ao escrever testes unitários?",
      "options": [
        { "id": 1, "name": "Criar testes pequenos e independentes que validem apenas uma funcionalidade por vez", "alias": "a" },
        { "id": 2, "name": "Testar todas as funcionalidades em um único teste", "alias": "b" },
        { "id": 3, "name": "Evitar o uso de testes automatizados", "alias": "c" }
      ],
      "correct": "a",
      "category": "testes-unitarios"
    },      
    {
      "id": 196,
      "question": "O que é um stub em testes unitários?",
      "options": [
        { "id": 1, "name": "Um objeto substituto que retorna respostas pré-definidas para chamadas de métodos", "alias": "a" },
        { "id": 2, "name": "Um erro encontrado durante a execução dos testes", "alias": "b" },
        { "id": 3, "name": "Uma técnica para testar interfaces gráficas", "alias": "c" }
      ],
      "correct": "a",
      "category": "testes-unitarios"
    },
    {
      "id": 197,
      "question": "Qual é a diferença entre mocks e stubs?",
      "options": [
        { "id": 1, "name": "Mocks verificam interações entre objetos, enquanto stubs retornam valores pré-definidos", "alias": "a" },
        { "id": 2, "name": "Mocks são usados apenas para testes de integração", "alias": "b" },
        { "id": 3, "name": "Stubs são usados apenas para testes de interface", "alias": "c" }
      ],
      "correct": "a",
      "category": "testes-unitarios"
    },
    {
      "id": 198,
      "question": "O que é um teste de regressão?",
      "options": [
        { "id": 1, "name": "Um teste que verifica se alterações no código não introduziram novos erros", "alias": "a" },
        { "id": 2, "name": "Um teste que mede a performance do sistema", "alias": "b" },
        { "id": 3, "name": "Um teste que verifica apenas a interface gráfica", "alias": "c" }
      ],
      "correct": "a",
      "category": "testes-unitarios"
    },
    {
      "id": 199,
      "question": "Qual é a importância da independência dos testes unitários?",
      "options": [
        { "id": 1, "name": "Permite que cada teste seja executado isoladamente sem depender de outros testes", "alias": "a" },
        { "id": 2, "name": "Reduz a necessidade de testes automatizados", "alias": "b" },
        { "id": 3, "name": "Elimina a necessidade de versionamento de código", "alias": "c" }
      ],
      "correct": "a",
      "category": "testes-unitarios"
    },
    {
      "id": 200,
      "question": "O que é um falso positivo em testes unitários?",
      "options": [
        { "id": 1, "name": "Um teste que passa mesmo quando há um erro no código", "alias": "a" },
        { "id": 2, "name": "Um teste que falha devido a um erro externo", "alias": "b" },
        { "id": 3, "name": "Um teste que verifica apenas a interface gráfica", "alias": "c" }
      ],
      "correct": "a",
      "category": "testes-unitarios"
    },
    {
      "id": 201,
      "question": "O que é um falso negativo em testes unitários?",
      "options": [
        { "id": 1, "name": "Um teste que falha mesmo quando o código está correto", "alias": "a" },
        { "id": 2, "name": "Um teste que mede a performance do sistema", "alias": "b" },
        { "id": 3, "name": "Um teste que verifica apenas a interface gráfica", "alias": "c" }
      ],
      "correct": "a",
      "category": "testes-unitarios"
    },
    {
      "id": 202,
      "question": "Qual é a relação entre testes unitários e refatoração de código?",
      "options": [
        { "id": 1, "name": "Testes unitários ajudam a garantir que a refatoração não introduza novos erros", "alias": "a" },
        { "id": 2, "name": "Refatoração elimina a necessidade de testes unitários", "alias": "b" },
        { "id": 3, "name": "Testes unitários são usados apenas para validar interfaces gráficas", "alias": "c" }
      ],
      "correct": "a",
      "category": "testes-unitarios"
    },
    {
      "id": 203,
      "question": "O que é um framework de testes unitários?",
      "options": [
        { "id": 1, "name": "Uma biblioteca que facilita a criação e execução de testes unitários", "alias": "a" },
        { "id": 2, "name": "Um método para testar apenas a experiência do usuário", "alias": "b" },
        { "id": 3, "name": "Uma técnica para testar interfaces gráficas", "alias": "c" }
      ],
      "correct": "a",
      "category": "testes-unitarios"
    },
    {
      "id": 204,
      "question": "Qual é a importância da cobertura de testes?",
      "options": [
        { "id": 1, "name": "Ajuda a identificar partes do código que não estão sendo testadas", "alias": "a" },
        { "id": 2, "name": "Reduz a necessidade de testes automatizados", "alias": "b" },
        { "id": 3, "name": "Elimina a necessidade de versionamento de código", "alias": "c" }
      ],
      "correct": "a",
      "category": "testes-unitarios"
    },
    {
      "id": 205,
      "question": "O que é um teste parametrizado?",
      "options": [
        { "id": 1, "name": "Um teste que executa o mesmo código com diferentes conjuntos de dados", "alias": "a" },
        { "id": 2, "name": "Um teste que mede a performance do sistema", "alias": "b" },
        { "id": 3, "name": "Um teste que verifica apenas a interface gráfica", "alias": "c" }
      ],
      "correct": "a",
      "category": "testes-unitarios"
    },
    {
      "id": 206,
      "question": "O que geralmente causa o erro 'Uncaught TypeError: Cannot read property' em JavaScript?",
      "options": [
        { "id": 1, "name": "Tentar acessar uma propriedade de um valor undefined ou null", "alias": "a" },
        { "id": 2, "name": "Erro de sintaxe no HTML", "alias": "b" },
        { "id": 3, "name": "Falta de ponto e vírgula", "alias": "c" }
      ],
      "correct": "a",
      "category": "front-end"
    },
    {
      "id": 207,
      "question": "O que significa o erro '404 Not Found' ao acessar uma página web?",
      "options": [
        { "id": 1, "name": "A página requisitada não foi encontrada no servidor", "alias": "a" },
        { "id": 2, "name": "O servidor está fora do ar", "alias": "b" },
        { "id": 3, "name": "O site está sem conexão com a internet", "alias": "c" }
      ],
      "correct": "a",
      "category": "front-end"
    },
    {
      "id": 208,
      "question": "O que pode causar o erro 'CORS policy: No 'Access-Control-Allow-Origin''?",
      "options": [
        { "id": 1, "name": "Fazer requisição para um domínio diferente sem permissões adequadas", "alias": "a" },
        { "id": 2, "name": "Erro de sintaxe no CSS", "alias": "b" },
        { "id": 3, "name": "Falta de ponto e vírgula no JavaScript", "alias": "c" }
      ],
      "correct": "a",
      "category": "front-end"
    },
    {
      "id": 209,
      "question": "O que significa o erro 'ReferenceError: x is not defined'?",
      "options": [
        { "id": 1, "name": "A variável x foi usada antes de ser declarada", "alias": "a" },
        { "id": 2, "name": "A variável x foi declarada duas vezes", "alias": "b" },
        { "id": 3, "name": "A variável x é uma palavra reservada", "alias": "c" }
      ],
      "correct": "a",
      "category": "front-end"
    },
    {
      "id": 210,
      "question": "O que pode causar o erro 'Unexpected token' em JavaScript?",
      "options": [
        { "id": 1, "name": "Erro de sintaxe, como falta de parênteses ou chaves", "alias": "a" },
        { "id": 2, "name": "Falta de conexão com o banco de dados", "alias": "b" },
        { "id": 3, "name": "Erro de permissão no servidor", "alias": "c" }
      ],
      "correct": "a",
      "category": "front-end"
    },
    {
      "id": 211,
      "question": "O que pode causar o erro 'Maximum call stack size exceeded'?",
      "options": [
        { "id": 1, "name": "Recursão infinita em uma função", "alias": "a" },
        { "id": 2, "name": "Falta de ponto e vírgula", "alias": "b" },
        { "id": 3, "name": "Erro de sintaxe no HTML", "alias": "c" }
      ],
      "correct": "a",
      "category": "front-end"
    },
    {
      "id": 212,
      "question": "O que significa o erro 'SyntaxError: Unexpected end of input'?",
      "options": [
        { "id": 1, "name": "O código terminou antes de fechar todos os blocos ou parênteses", "alias": "a" },
        { "id": 2, "name": "Falta de ponto e vírgula", "alias": "b" },
        { "id": 3, "name": "Erro de permissão no servidor", "alias": "c" }
      ],
      "correct": "a",
      "category": "front-end"
    },
    {
      "id": 213,
      "question": "O que pode causar o erro 'Failed to fetch' ao fazer uma requisição fetch?",
      "options": [
        { "id": 1, "name": "Problemas de rede ou URL incorreta", "alias": "a" },
        { "id": 2, "name": "Erro de sintaxe no CSS", "alias": "b" },
        { "id": 3, "name": "Falta de ponto e vírgula no JavaScript", "alias": "c" }
      ],
      "correct": "a",
      "category": "front-end"
    },
    {
      "id": 214,
      "question": "O que significa o erro 'TypeError: x is not a function'?",
      "options": [
        { "id": 1, "name": "Tentar chamar uma variável que não é uma função", "alias": "a" },
        { "id": 2, "name": "A função x não foi importada", "alias": "b" },
        { "id": 3, "name": "A função x foi declarada duas vezes", "alias": "c" }
      ],
      "correct": "a",
      "category": "front-end"
    },
    {
      "id": 215,
      "question": "O que pode causar o erro 'Cannot set property of undefined'?",
      "options": [
        { "id": 1, "name": "Tentar atribuir um valor a uma propriedade de um objeto que não existe", "alias": "a" },
        { "id": 2, "name": "Erro de sintaxe no CSS", "alias": "b" },
        { "id": 3, "name": "Falta de ponto e vírgula no JavaScript", "alias": "c" }
      ],
      "correct": "a",
      "category": "front-end"
    },
    {
      "id": 216,
      "question": "O que é o Virtual DOM em frameworks como React?",
      "options": [
        { "id": 1, "name": "Uma representação leve do DOM real usada para otimizar atualizações", "alias": "a" },
        { "id": 2, "name": "Um novo tipo de navegador", "alias": "b" },
        { "id": 3, "name": "Uma biblioteca para manipular CSS", "alias": "c" }
      ],
      "correct": "a",
      "category": "front-end"
    },
    {
      "id": 217,
      "question": "Qual propriedade CSS é usada para criar sombras em elementos?",
      "options": [
        { "id": 1, "name": "box-shadow", "alias": "a" },
        { "id": 2, "name": "shadow", "alias": "b" },
        { "id": 3, "name": "element-shadow", "alias": "c" }
      ],
      "correct": "a",
      "category": "front-end"
    },
    {
      "id": 218,
      "question": "O que faz a propriedade CSS 'position: sticky'?",
      "options": [
        { "id": 1, "name": "Mantém o elemento fixo até atingir um determinado ponto de rolagem", "alias": "a" },
        { "id": 2, "name": "Deixa o elemento sempre fixo na tela", "alias": "b" },
        { "id": 3, "name": "Centraliza o elemento na tela", "alias": "c" }
      ],
      "correct": "a",
      "category": "front-end"
    },
    {
      "id": 219,
      "question": "O que é o conceito de 'componentização' em frameworks modernos?",
      "options": [
        { "id": 1, "name": "Dividir a interface em partes reutilizáveis chamadas componentes", "alias": "a" },
        { "id": 2, "name": "Criar apenas uma página para toda a aplicação", "alias": "b" },
        { "id": 3, "name": "Usar apenas funções globais", "alias": "c" }
      ],
      "correct": "a",
      "category": "front-end"
    },
    {
      "id": 220,
      "question": "Qual evento JavaScript é disparado quando um formulário é enviado?",
      "options": [
        { "id": 1, "name": "submit", "alias": "a" },
        { "id": 2, "name": "send", "alias": "b" },
        { "id": 3, "name": "post", "alias": "c" }
      ],
      "correct": "a",
      "category": "front-end"
    },
    {
      "id": 221,
      "question": "O que é o conceito de 'mobile first' no desenvolvimento front-end?",
      "options": [
        { "id": 1, "name": "Desenvolver primeiro para dispositivos móveis e depois adaptar para telas maiores", "alias": "a" },
        { "id": 2, "name": "Desenvolver apenas para desktop", "alias": "b" },
        { "id": 3, "name": "Priorizar animações em dispositivos móveis", "alias": "c" }
      ],
      "correct": "a",
      "category": "front-end"
    },
    {
      "id": 222,
      "question": "Qual propriedade CSS é usada para arredondar os cantos de um elemento?",
      "options": [
        { "id": 1, "name": "border-radius", "alias": "a" },
        { "id": 2, "name": "corner-radius", "alias": "b" },
        { "id": 3, "name": "round-corner", "alias": "c" }
      ],
      "correct": "a",
      "category": "front-end"
    },
    {
      "id": 223,
      "question": "O que é o atributo 'tabindex' em HTML?",
      "options": [
        { "id": 1, "name": "Define a ordem de navegação por tabulação entre elementos", "alias": "a" },
        { "id": 2, "name": "Define o tamanho da aba do navegador", "alias": "b" },
        { "id": 3, "name": "Define o título da aba", "alias": "c" }
      ],
      "correct": "a",
      "category": "front-end"
    },
    {
      "id": 224,
      "question": "Qual é a função do atributo 'autofocus' em um input HTML?",
      "options": [
        { "id": 1, "name": "Faz o campo receber foco automaticamente ao carregar a página", "alias": "a" },
        { "id": 2, "name": "Deixa o campo em negrito", "alias": "b" },
        { "id": 3, "name": "Desabilita o campo", "alias": "c" }
      ],
      "correct": "a",
      "category": "front-end"
    },
    {
      "id": 225,
      "question": "O que é o atributo 'placeholder' em um input HTML?",
      "options": [
        { "id": 1, "name": "Exibe um texto de dica dentro do campo até que o usuário digite algo", "alias": "a" },
        { "id": 2, "name": "Define o valor inicial do campo", "alias": "b" },
        { "id": 3, "name": "Define o tipo do campo", "alias": "c" }
      ],
      "correct": "a",
      "category": "front-end"
    },
    {
      "id": 226,
      "question": "Qual é a diferença entre 'interface' e 'type' em TypeScript?",
      "options": [
        { "id": 1, "name": "Interfaces são usadas apenas para classes, enquanto types são usados para funções", "alias": "a" },
        { "id": 2, "name": "Interfaces podem ser estendidas múltiplas vezes, enquanto types não", "alias": "b" },
        { "id": 3, "name": "Types são exclusivos para definir tipos primitivos", "alias": "c" }
      ],
    "correct": "b",
    "category": "typescript"
  },    {
      "id": 227,
      "question": "O que é um 'union type' em TypeScript?",
      "options": [
        { "id": 1, "name": "Um tipo que pode ser um de vários tipos especificados", "alias": "a" },
        { "id": 2, "name": "Um tipo que combina dois tipos em um só", "alias": "b" },
        { "id": 3, "name": "Um tipo exclusivo para arrays", "alias": "c" }
      ],
      "correct": "a",
      "category": "typescript"
    },
    {
      "id": 228,
      "question": "O que é um 'intersection type' em TypeScript?",
      "options": [
        { "id": 1, "name": "Um tipo que combina múltiplos tipos em um só", "alias": "a" },
        { "id": 2, "name": "Um tipo que pode ser um de vários tipos especificados", "alias": "b" },
        { "id": 3, "name": "Um tipo exclusivo para funções", "alias": "c" }
      ],
      "correct": "a",
      "category": "typescript"
    },
    {
      "id": 229,
      "question": "O que é o operador 'as' em TypeScript?",
      "options": [
        { "id": 1, "name": "Um operador de asserção de tipo que informa ao compilador para tratar uma variável como um tipo específico", "alias": "a" },
        { "id": 2, "name": "Um operador para definir variáveis constantes", "alias": "b" },
        { "id": 3, "name": "Um operador para criar arrays", "alias": "c" }
      ],
      "correct": "a",
      "category": "typescript"
    },
    {
      "id": 230,
      "question": "O que é o 'type assertion' em TypeScript?",
      "options": [
        { "id": 1, "name": "Uma forma de informar ao compilador sobre o tipo de uma variável quando ele não consegue inferir automaticamente", "alias": "a" },
        { "id": 2, "name": "Uma técnica para criar tipos genéricos", "alias": "b" },
        { "id": 3, "name": "Uma maneira de definir interfaces", "alias": "c" }
      ],
      "correct": "a",
      "category": "typescript"
    },
    {
      "id": 231,
      "question": "Qual é o principal benefício de aplicar o princípio DRY (Don't Repeat Yourself)?",
      "options": [
        { "id": 1, "name": "Melhorar a performance do código", "alias": "a" },
        { "id": 2, "name": "Evitar duplicação e facilitar manutenção", "alias": "b" },
        { "id": 3, "name": "Aumentar a complexidade do sistema", "alias": "c" }
      ],
      "correct": "b",
      "category": "boas-praticas"
    },
    {
      "id": 252,
      "question": "Por que é importante nomear variáveis de forma clara e descritiva?",
      "options": [
        { "id": 1, "name": "Para que o código fique mais difícil de entender", "alias": "a" },
        { "id": 2, "name": "Para facilitar a leitura e manutenção do código", "alias": "b" },
        { "id": 3, "name": "Para reduzir o tempo de compilação", "alias": "c" }
      ],
      "correct": "b",
      "category": "boas-praticas"
    },
    {
      "id": 253,
      "question": "O que significa o princípio KISS (Keep It Simple, Stupid)?",
      "options": [
        { "id": 1, "name": "Evitar comentários no código", "alias": "a" },
        { "id": 2, "name": "Manter o código o mais simples e direto possível", "alias": "b" },
        { "id": 3, "name": "Utilizar apenas variáveis globais", "alias": "c" }
      ],
      "correct": "b",
      "category": "boas-praticas"
    },
    {
      "id": 254,
      "question": "Qual é a vantagem de dividir o código em módulos ou componentes?",
      "options": [
        { "id": 1, "name": "Facilita a reutilização e a manutenção", "alias": "a" },
        { "id": 2, "name": "Dificulta a leitura do código", "alias": "b" },
        { "id": 3, "name": "Aumenta o tempo de execução", "alias": "c" }
      ],
      "correct": "a",
      "category": "boas-praticas"
    },
    {
      "id": 255,
      "question": "Por que é importante escrever testes automatizados?",
      "options": [
        { "id": 1, "name": "Para aumentar a complexidade do projeto", "alias": "a" },
        { "id": 2, "name": "Para garantir que o código funcione como esperado e facilitar refatorações", "alias": "b" },
        { "id": 3, "name": "Para evitar o uso de comentários", "alias": "c" }
      ],
      "correct": "b",
      "category": "boas-praticas"
    },
    {
      "id": 256,
      "question": "O que é um 'code smell'?",
      "options": [
        { "id": 1, "name": "Um erro de sintaxe no código", "alias": "a" },
        { "id": 2, "name": "Um indicativo de que o código pode ser melhorado", "alias": "b" },
        { "id": 3, "name": "Um tipo de variável", "alias": "c" }
      ],
      "correct": "b",
      "category": "boas-praticas"
    },
    {
      "id": 257,
      "question": "Qual é a importância de seguir um padrão de codificação (coding style)?",
      "options": [
        { "id": 1, "name": "Para tornar o código mais difícil de entender", "alias": "a" },
        { "id": 2, "name": "Para garantir consistência e facilitar a colaboração entre desenvolvedores", "alias": "b" },
        { "id": 3, "name": "Para aumentar o tamanho do arquivo", "alias": "c" }
      ],
      "correct": "b",
      "category": "boas-praticas"
    },
    {
      "id": 258,
      "question": "O que é refatoração de código?",
      "options": [
        { "id": 1, "name": "Adicionar novas funcionalidades ao código", "alias": "a" },
        { "id": 2, "name": "Modificar o código para melhorar sua estrutura sem alterar seu comportamento", "alias": "b" },
        { "id": 3, "name": "Remover comentários do código", "alias": "c" }
      ],
      "correct": "b",
      "category": "boas-praticas"
    },
    {
      "id": 259,
      "question": "Por que é importante documentar o código?",
      "options": [
        { "id": 1, "name": "Para dificultar a leitura do código", "alias": "a" },
        { "id": 2, "name": "Para ajudar outros desenvolvedores (e você mesmo) a entenderem o propósito e funcionamento do código", "alias": "b"},
        { "id": 3, "name": "Para aumentar o tamanho do arquivo", "alias": "c" }
      ],
      "correct": "b",
      "category": "boas-praticas"
    },
    {
      "id": 256,
      "question": "O que significa CI no contexto de desenvolvimento de software?",
      "options": [
        { "id": 1, "name": "Continuous Integration", "alias": "a" },
        { "id": 2, "name": "Code Injection", "alias": "b" },
        { "id": 3, "name": "Centralized Infrastructure", "alias": "c" }
      ],
      "correct": "a",
      "category": "ci-cd"
    },
    {
      "id": 257,
      "question": "Qual é o objetivo principal da entrega contínua (CD)?",
      "options": [
        { "id": 1, "name": "Executar testes manuais", "alias": "a" },
        { "id": 2, "name": "Automatizar o processo de deploy com segurança e frequência", "alias": "b" },
        { "id": 3, "name": "Evitar atualizações no sistema", "alias": "c" }
      ],
      "correct": "b",
      "category": "ci-cd"
    },
    {
      "id": 258,
      "question": "Qual ferramenta é comumente usada para pipelines de CI/CD?",
      "options": [
        { "id": 1, "name": "Jenkins", "alias": "a" },
        { "id": 2, "name": "Photoshop", "alias": "b" },
        { "id": 3, "name": "Excel", "alias": "c" }
      ],
      "correct": "a",
      "category": "ci-cd"
    },
    {
      "id": 259,
      "question": "Em um pipeline CI/CD, o que geralmente acontece após o commit de código?",
      "options": [
        { "id": 1, "name": "O código é ignorado até o próximo deploy manual", "alias": "a" },
        { "id": 2, "name": "O pipeline é disparado para compilar, testar e preparar o deploy", "alias": "b" },
        { "id": 3, "name": "O código é enviado diretamente para produção", "alias": "c" }
      ],
      "correct": "b",
      "category": "ci-cd"
    },
    {
      "id": 260,
      "question": "Qual é uma vantagem do uso de CI/CD em projetos de software?",
      "options": [
        { "id": 1, "name": "Redução da frequência de deploys", "alias": "a" },
        { "id": 2, "name": "Maior agilidade e confiabilidade nas entregas", "alias": "b" },
        { "id": 3, "name": "Eliminação completa de bugs", "alias": "c" }
      ],
      "correct": "b",
      "category": "ci-cd"
    },
    {
      "id": 261,
      "question": "O que é um pipeline de CI/CD?",
      "options": [
        { "id": 1, "name": "Um conjunto de comandos para estilizar o código", "alias": "a" },
        { "id": 2, "name": "Uma sequência automatizada de etapas para compilar, testar e implantar software", "alias": "b" },
        { "id": 3, "name": "Um script para limpar o cache do servidor", "alias": "c" }
      ],
      "correct": "b",
      "category": "ci-cd"
    },
    {
      "id": 262,
      "question": "Qual prática ajuda a evitar conflitos durante a integração contínua?",
      "options": [
        { "id": 1, "name": "Commits frequentes e pequenos", "alias": "a" },
        { "id": 2, "name": "Deploy manual em produção", "alias": "b" },
        { "id": 3, "name": "Uso exclusivo de branches longos", "alias": "c" }
      ],
      "correct": "a",
      "category": "ci-cd"
    },
    {
      "id": 263,
      "question": "O que é um artefato em um processo de CI/CD?",
      "options": [
        { "id": 1, "name": "Um arquivo gerado durante o build que pode ser implantado", "alias": "a" },
        { "id": 2, "name": "Um erro de compilação", "alias": "b" },
        { "id": 3, "name": "Um script de teste automatizado", "alias": "c" }
      ],
      "correct": "a",
      "category": "ci-cd"
    },
    {
      "id": 264,
      "question": "Qual é o papel dos testes automatizados em CI/CD?",
      "options": [
        { "id": 1, "name": "Verificar se o código está formatado corretamente", "alias": "a" },
        { "id": 2, "name": "Garantir que novas alterações não quebrem funcionalidades existentes", "alias": "b" },
        { "id": 3, "name": "Reduzir o tempo de deploy manual", "alias": "c" }
      ],
      "correct": "b",
      "category": "ci-cd"
    },
    {
      "id": 265,
      "question": "O que é um ambiente de staging em CI/CD?",
      "options": [
        { "id": 1, "name": "Um ambiente de produção com dados reais", "alias": "a" },
        { "id": 2, "name": "Um ambiente de testes que simula a produção", "alias": "b" },
        { "id": 3, "name": "Um ambiente usado apenas para desenvolvimento local", "alias": "c" }
      ],
      "correct": "b",
      "category": "ci-cd"
    },
    {
      "id": 266,
      "question": "Qual é o principal objetivo de um code review?",
      "options": [
        { "id": 1, "name": "Criticar o estilo pessoal do desenvolvedor", "alias": "a" },
        { "id": 2, "name": "Garantir qualidade, legibilidade e detectar possíveis erros", "alias": "b" },
        { "id": 3, "name": "Reduzir o número de commits no projeto", "alias": "c" }
      ],
      "correct": "b",
      "category": "code-review"
    },
    {
      "id": 267,
      "question": "O que deve ser evitado durante um code review?",
      "options": [
        { "id": 1, "name": "Comentários construtivos e sugestões", "alias": "a" },
        { "id": 2, "name": "Discussões sobre boas práticas", "alias": "b" },
        { "id": 3, "name": "Críticas pessoais e subjetivas", "alias": "c" }
      ],
      "correct": "c",
      "category": "code-review"
    },
    {
      "id": 268,
      "question": "Qual é uma boa prática ao revisar código de outra pessoa?",
      "options": [
        { "id": 1, "name": "Testar o código antes de aprovar", "alias": "a" },
        { "id": 2, "name": "Ignorar os testes automatizados", "alias": "b" },
        { "id": 3, "name": "Aprovar sem ler se o autor é experiente", "alias": "c" }
      ],
      "correct": "a",
      "category": "code-review"
    },
    {
      "id": 269,
      "question": "Por que é importante manter o escopo pequeno em um pull request?",
      "options": [
        { "id": 1, "name": "Facilita a revisão e reduz chances de erros", "alias": "a" },
        { "id": 2, "name": "Permite adicionar mais funcionalidades de uma vez", "alias": "b" },
        { "id": 3, "name": "Evita que outros desenvolvedores vejam o código", "alias": "c" }
      ],
      "correct": "a",
      "category": "code-review"
    },
    {
      "id": 270,
      "question": "Qual ferramenta é comumente usada para realizar code reviews em projetos Git?",
      "options": [
        { "id": 1, "name": "GitHub", "alias": "a" },
        { "id": 2, "name": "Photoshop", "alias": "b" },
        { "id": 3, "name": "Excel", "alias": "c" }
      ],
      "correct": "a",
      "category": "code-review"
    },
    {
      "id": 271,
      "question": "Por que é importante revisar testes automatizados durante o code review?",
      "options": [
        { "id": 1, "name": "Para garantir que o código esteja bem documentado", "alias": "a" },
        { "id": 2, "name": "Para verificar se os testes cobrem os cenários esperados", "alias": "b" },
        { "id": 3, "name": "Para remover todos os testes do projeto", "alias": "c" }
      ],
      "correct": "b",
      "category": "code-review"
    },
    {
      "id": 272,
      "question": "Qual é uma boa prática ao escrever comentários em um code review?",
      "options": [
        { "id": 1, "name": "Ser claro, objetivo e respeitoso", "alias": "a" },
        { "id": 2, "name": "Usar linguagem agressiva para reforçar pontos", "alias": "b" },
        { "id": 3, "name": "Evitar qualquer tipo de comentário", "alias": "c" }
      ],
      "correct": "a",
      "category": "code-review"
    },
    {
      "id": 273,
      "question": "O que significa aprovar um pull request?",
      "options": [
        { "id": 1, "name": "Que o código foi revisado e está pronto para ser mesclado", "alias": "a" },
        { "id": 2, "name": "Que o código será deletado", "alias": "b" },
        { "id": 3, "name": "Que o autor deve reescrever tudo", "alias": "c" }
      ],
      "correct": "a",
      "category": "code-review"
    },
    {
      "id": 274,
      "question": "Qual é o impacto de um code review bem feito na qualidade do software?",
      "options": [
        { "id": 1, "name": "Reduz bugs e melhora a legibilidade do código", "alias": "a" },
        { "id": 2, "name": "Aumenta o tempo de desenvolvimento sem benefícios", "alias": "b" },
        { "id": 3, "name": "Impede que o código seja executado", "alias": "c" }
      ],
      "correct": "a",
      "category": "code-review"
    },
    {
      "id": 275,
      "question": "Quando é ideal realizar um code review?",
      "options": [
        { "id": 1, "name": "Antes de mesclar o código na branch principal", "alias": "a" },
        { "id": 2, "name": "Após o deploy em produção", "alias": "b" },
        { "id": 3, "name": "Durante a criação do repositório", "alias": "c" }
      ],
      "correct": "a",
      "category": "code-review"
    },
    {
      "id": 276,
      "question": "O que é o Figma?",
      "options": [
        { "id": 1, "name": "Uma ferramenta de edição de vídeo", "alias": "a" },
        { "id": 2, "name": "Uma plataforma de design colaborativo baseada em nuvem", "alias": "b" },
        { "id": 3, "name": "Um sistema de gerenciamento de banco de dados", "alias": "c" }
      ],
      "correct": "b",
      "category": "figma"
    },
    {
      "id": 277,
      "question": "Qual recurso do Figma permite criar componentes reutilizáveis?",
      "options": [
        { "id": 1, "name": "Frames", "alias": "a" },
        { "id": 2, "name": "Prototypes", "alias": "b" },
        { "id": 3, "name": "Components", "alias": "c" }
      ],
      "correct": "c",
      "category": "figma"
    },
    {
      "id": 278,
      "question": "O que é o recurso 'Auto Layout' no Figma?",
      "options": [
        { "id": 1, "name": "Uma forma de aplicar estilos CSS automaticamente", "alias": "a" },
        { "id": 2, "name": "Uma funcionalidade que organiza elementos dinamicamente com base em regras de layout", "alias": "b" },
        { "id": 3, "name": "Um plugin para exportar imagens", "alias": "c" }
      ],
      "correct": "b",
      "category": "figma"
    },
    {
      "id": 279,
      "question": "Qual vantagem do Figma em relação a ferramentas tradicionais de design?",
      "options": [
        { "id": 1, "name": "Funciona apenas offline", "alias": "a" },
        { "id": 2, "name": "Permite colaboração em tempo real entre membros da equipe", "alias": "b" },
        { "id": 3, "name": "Requer instalação local obrigatória", "alias": "c" }
      ],
      "correct": "b",
      "category": "figma"
    },
    {
      "id": 280,
      "question": "O que é o FigJam dentro do ecossistema Figma?",
      "options": [
        { "id": 1, "name": "Uma ferramenta de prototipagem avançada", "alias": "a" },
        { "id": 2, "name": "Uma extensão para exportar código", "alias": "b" },
        { "id": 3, "name": "Uma ferramenta colaborativa para brainstorming e diagramas", "alias": "c" }
      ],
      "correct": "c",
      "category": "figma"
    },
    {
      "id": 281,
      "question": "Qual é a função do recurso 'Prototype' no Figma?",
      "options": [
        { "id": 1, "name": "Criar animações para vídeos", "alias": "a" },
        { "id": 2, "name": "Simular a navegação entre telas e interações", "alias": "b" },
        { "id": 3, "name": "Exportar o projeto para código HTML", "alias": "c" }
      ],
      "correct": "b",
      "category": "figma"
    },
    {
      "id": 282,
      "question": "Como os desenvolvedores geralmente acessam especificações de design no Figma?",
      "options": [
        { "id": 1, "name": "Através do modo 'Inspect'", "alias": "a" },
        { "id": 2, "name": "Exportando o projeto como PDF", "alias": "b" },
        { "id": 3, "name": "Copiando manualmente os estilos", "alias": "c" }
      ],
      "correct": "a",
      "category": "figma"
    },
    {
      "id": 283,
      "question": "O que são 'Variants' em Figma?",
      "options": [
        { "id": 1, "name": "Versões alternativas de arquivos exportados", "alias": "a" },
        { "id": 2, "name": "Componentes com diferentes estados agrupados em um único elemento", "alias": "b" },
        { "id": 3, "name": "Plugins para alterar temas", "alias": "c" }
      ],
      "correct": "b",
      "category": "figma"
    },
    {
      "id": 284,
      "question": "Qual é o benefício de usar estilos compartilhados no Figma?",
      "options": [
        { "id": 1, "name": "Permite alterar o layout automaticamente", "alias": "a" },
        { "id": 2, "name": "Facilita a consistência visual e manutenção do design", "alias": "b" },
        { "id": 3, "name": "Impede que outros editem o projeto", "alias": "c" }
      ],
      "correct": "b",
      "category": "figma"
    },
    {
      "id": 285,
      "question": "Como é possível colaborar em tempo real no Figma?",
      "options": [
        { "id": 1, "name": "Compartilhando o arquivo via e-mail", "alias": "a" },
        { "id": 2, "name": "Convidando membros para editar diretamente no navegador", "alias": "b" },
        { "id": 3, "name": "Exportando o projeto para o Google Drive", "alias": "c" }
      ],
      "correct": "b",
      "category": "figma"
    },
    {
      "id": 286,
      "question": "Qual é a diferença entre '==' e '===' em JavaScript?",
      "options": [
        { "id": 1, "name": "'==' compara apenas valores, enquanto '===' compara valor e tipo", "alias": "a" },
        { "id": 2, "name": "Ambos são iguais e podem ser usados indistintamente", "alias": "b" },
        { "id": 3, "name": "'===' é usado apenas em TypeScript", "alias": "c" }
      ],
      "correct": "a",
      "explanation": "'==' permite coerção de tipos, enquanto '===' é uma comparação estrita.",
      "category": "entrevista",
      "interviewTip": "Como explicar na entrevista: Sempre uso '===' (strict equality) porque é mais previsível. O '==' faz coerção de tipos que pode causar bugs sutis. Por exemplo, '0' == false retorna true, mas '0' === false retorna false. Em produção, prefiro ser explícito e evitar comportamentos inesperados."
    },
    {
      "id": 287,
      "question": "Explique o ciclo de vida de um componente Angular.",
      "options": [
        { "id": 1, "name": "Inclui fases como ngOnInit, ngOnChanges e ngOnDestroy", "alias": "a" },
        { "id": 2, "name": "É composto apenas por ngCreate e ngDelete", "alias": "b" },
        { "id": 3, "name": "Não possui ciclo de vida definido", "alias": "c" }
      ],
      "correct": "a",
      "explanation": "O ciclo de vida do Angular inclui hooks como ngOnInit, ngOnChanges, ngAfterViewInit e ngOnDestroy.",
      "category": "entrevista",
      "interviewTip": "Como explicar na entrevista: O Angular possui hooks de ciclo de vida que permitem executar código em momentos específicos. Uso ngOnInit para inicialização, ngOnChanges para reagir a mudanças de @Input, ngAfterViewInit quando preciso acessar elementos DOM, e ngOnDestroy para cleanup de subscriptions e evitar memory leaks. É fundamental implementar OnDestroy ao trabalhar com Observables."
    },
    {
      "id": 288,
      "question": "Como você garantiria qualidade de código em um projeto colaborativo?",
      "options": [
        { "id": 1, "name": "Utilizando code reviews, testes automatizados e linters", "alias": "a" },
        { "id": 2, "name": "Aprovando todos os pull requests automaticamente", "alias": "b" },
        { "id": 3, "name": "Editando diretamente na branch principal", "alias": "c" }
      ],
      "correct": "a",
      "explanation": "A qualidade é garantida através de múltiplas camadas: revisão de código, testes e ferramentas automatizadas.",
      "category": "entrevista",
      "interviewTip": "Como explicar na entrevista: Implemento uma estratégia em camadas: 1) Linters (ESLint, Prettier) para padronização automática, 2) Testes unitários com cobertura mínima de 80%, 3) Code reviews obrigatórios com pelo menos 2 aprovações, 4) Pipeline CI/CD que bloqueia merge se testes falharem, 5) SonarQube para análise de qualidade. Também promovo pair programming para compartilhar conhecimento."
    },
    {
      "id": 289,
      "question": "Quais são os principais métodos HTTP usados em APIs REST?",
      "options": [
        { "id": 1, "name": "GET, POST, PUT, PATCH, DELETE", "alias": "a" },
        { "id": 2, "name": "SEND, RECEIVE, UPDATE, REMOVE", "alias": "b" },
        { "id": 3, "name": "CONNECT, TRACE, OPTIONS", "alias": "c" }
      ],
      "correct": "a",
      "explanation": "GET recupera dados, POST cria, PUT substitui completamente, PATCH atualiza parcialmente, DELETE remove recursos.",
      "category": "entrevista",
      "interviewTip": "Como explicar na entrevista: Uso cada método com seu propósito específico: GET para consultas (idempotente e cacheable), POST para criar recursos únicos, PUT para substituição completa (idempotente), PATCH para atualizações parciais, DELETE para remoção. Sempre implemento status codes adequados: 200 para sucesso, 201 para criação, 404 para não encontrado. Isso garante uma API RESTful bem estruturada."
    },
    {
      "id": 290,
      "question": "Qual é a diferença entre integração contínua (CI) e entrega contínua (CD)?",
      "options": [
        { "id": 1, "name": "CI foca em integrar código frequentemente; CD automatiza o deploy após testes", "alias": "a" },
        { "id": 2, "name": "CI é usado apenas em projetos mobile; CD em projetos web", "alias": "b" },
        { "id": 3, "name": "Ambos significam a mesma coisa", "alias": "c" }
      ],
      "correct": "a",
      "explanation": "CI automatiza integração e testes; CD automatiza o processo de deployment.",
      "category": "entrevista",
      "interviewTip": "Como explicar na entrevista: CI é sobre integrar código frequentemente - cada commit dispara build e testes automatizados. CD vai além: automatiza o deployment para diferentes ambientes. Na prática, uso GitHub Actions onde CI roda testes a cada PR, e CD faz deploy automático para staging quando merge na main, mas deploy para produção requer aprovação manual. Isso garante qualidade e agilidade com segurança."
    },
    {
      "id": 291,
      "question": "O que representa o 'S' no acrônimo SOLID?",
      "options": [
        { "id": 1, "name": "Single Responsibility Principle", "alias": "a" },
        { "id": 2, "name": "Simple Routing Protocol", "alias": "b" },
        { "id": 3, "name": "Secure Resource Policy", "alias": "c" }
      ],
      "correct": "a",
      "explanation": "Single Responsibility Principle: cada classe deve ter apenas uma razão para mudar.",
      "category": "entrevista",
      "interviewTip": "Como explicar na entrevista: O Single Responsibility Principle determina que cada classe deve ter apenas uma responsabilidade. Por exemplo, divido UserService em UserRepository (acesso a dados), UserValidator (validações) e UserNotifier (notificações). Isso facilita testes, manutenção e reduz acoplamento. Quando preciso modificar a validação, só altero UserValidator sem impactar outras funcionalidades."
    },
    {
      "id": 292,
      "question": "Qual é a ideia central do princípio Open/Closed (O de SOLID)?",
      "options": [
        { "id": 1, "name": "O código deve estar aberto para modificação e fechado para extensão", "alias": "a" },
        { "id": 2, "name": "O código deve estar aberto para extensão e fechado para modificação", "alias": "b" },
        { "id": 3, "name": "O código deve ser sempre público", "alias": "c" }
      ],
      "correct": "b",
      "explanation": "Classes devem estar abertas para extensão mas fechadas para modificação.",
      "category": "entrevista",
      "interviewTip": "Como explicar na entrevista: Open/Closed significa que posso adicionar novas funcionalidades sem alterar código existente. Uso interfaces e herança: criando PaymentProcessor interface, posso implementar CreditCardPayment, PayPalPayment sem modificar o código original. Quando surge novo método de pagamento, apenas crio nova implementação. Isso reduz bugs e facilita manutenção em sistemas legados."
    },
    {
      "id": 293,
      "question": "O que o princípio Liskov Substitution garante?",
      "options": [
        { "id": 1, "name": "Que subclasses possam substituir suas superclasses sem alterar o comportamento esperado", "alias": "a" },
        { "id": 2, "name": "Que todas as classes sejam abstratas", "alias": "b" },
        { "id": 3, "name": "Que métodos sejam sempre públicos", "alias": "c" }
      ],
      "correct": "a",
      "explanation": "Objetos de subclasses devem poder substituir objetos da classe pai sem quebrar a funcionalidade.",
      "category": "entrevista",
      "interviewTip": "Como explicar na entrevista: Liskov Substitution garante que qualquer instância da classe pai pode ser substituída por instância da subclasse. Se tenho Animal e Bird extends Animal, posso usar Bird onde espero Animal. Mas se Bird sobrescreve fly() e Penguin extends Bird, Penguin não deveria ter fly() funcional. Prefiro criar Flying interface apenas para aves que voam. Isso evita quebras no polimorfismo."
    },
    {
      "id": 294,
      "question": "O que o princípio Interface Segregation recomenda?",
      "options": [
        { "id": 1, "name": "Criar interfaces grandes e genéricas", "alias": "a" },
        { "id": 2, "name": "Dividir interfaces em partes menores e mais específicas", "alias": "b" },
        { "id": 3, "name": "Evitar o uso de interfaces", "alias": "c" }
      ],
      "correct": "b",
      "explanation": "Clientes não devem depender de interfaces que não usam.",
      "category": "entrevista",
      "interviewTip": "Como explicar na entrevista: Interface Segregation evita que classes implementem métodos desnecessários. Ao invés de uma interface Worker gigante com work(), eat(), sleep(), crio interfaces específicas: Workable, Eatable, Sleepable. Robot implementa apenas Workable, Human implementa todas. Assim cada classe depende apenas do que realmente precisa, tornando o código mais flexível e fácil de manter."
    },
    {
      "id": 295,
      "question": "Qual é o foco do princípio Dependency Inversion?",
      "options": [
        { "id": 1, "name": "Depender de implementações concretas", "alias": "a" },
        { "id": 2, "name": "Depender de abstrações e não de implementações", "alias": "b" },
        { "id": 3, "name": "Evitar o uso de dependências externas", "alias": "c" }
      ],
      "correct": "b",
      "explanation": "Módulos de alto nível não devem depender de módulos de baixo nível. Ambos devem depender de abstrações.",
      "category": "entrevista",
      "interviewTip": "Como explicar na entrevista: Dependency Inversion inverte a dependência tradicional. Em vez de UserService depender diretamente de MySQLDatabase, ambos dependem de DatabaseInterface. UserService recebe a implementação via injeção de dependência. Isso permite trocar MySQL por PostgreSQL sem alterar UserService. No Angular, uso injeção de dependência nativamente: constructor(@Inject(DATABASE_TOKEN) private db: DatabaseInterface)."
    },
    {
      "id": 296,
      "question": "O que significa o acrônimo SOLID na programação orientada a objetos?",
      "options": [
        { "id": 1, "name": "Single Responsibility, Open/Closed, Liskov Substitution, Interface Segregation, Dependency Inversion", "alias": "a" },
        { "id": 2, "name": "Simple Object, Logic Integration, Data", "alias": "b" },
        { "id": 3, "name": "System Optimization, Layer Isolation, Design", "alias": "c" }
      ],
      "correct": "a",
      "explanation": "SOLID são 5 princípios fundamentais para design de software orientado a objetos.",
      "category": "entrevista",
      "interviewTip": "Como explicar na entrevista: SOLID são princípios que aplico diariamente para criar código maintível. Single Responsibility (uma razão para mudar), Open/Closed (extensível sem modificação), Liskov Substitution (subclasses substituem pais), Interface Segregation (interfaces específicas), Dependency Inversion (depender de abstrações). Exemplo prático: ao criar UserManager, separo responsabilidades (UserValidator, UserRepository), uso interfaces para extensibilidade e injeto dependências."
    },
    {
      "id": 297,
      "question": "Por que o princípio Single Responsibility é importante?",
      "options": [
        { "id": 1, "name": "Porque permite que uma classe tenha múltiplas responsabilidades", "alias": "a" },
        { "id": 2, "name": "Porque facilita testes, manutenção e reutilização do código", "alias": "b" },
        { "id": 3, "name": "Porque reduz o número de arquivos no projeto", "alias": "c" }
      ],
      "correct": "b",
      "explanation": "Classes com única responsabilidade são mais fáceis de testar, manter e reutilizar.",
      "category": "entrevista",
      "interviewTip": "Como explicar na entrevista: Single Responsibility torna o código previsível e maintível. Uma classe OrderProcessor que processa pedidos, envia emails E calcula impostos é difícil de testar e modificar. Separando em OrderProcessor, EmailService e TaxCalculator, posso testar cada um isoladamente, reutilizar TaxCalculator em outros contextos e modificar cálculo de impostos sem afetar processamento de pedidos."
    },
    {
      "id": 298,
      "question": "Como o princípio Interface Segregation melhora o design de software?",
      "options": [
        { "id": 1, "name": "Evita que classes sejam forçadas a implementar métodos que não usam", "alias": "a" },
        { "id": 2, "name": "Permite que interfaces tenham apenas métodos privados", "alias": "b" },
        { "id": 3, "name": "Garante que todas as interfaces sejam genéricas", "alias": "c" }
      ],
      "correct": "a",
      "explanation": "Clientes não devem ser forçados a depender de interfaces que não utilizam.",
      "category": "entrevista",
      "interviewTip": "Como explicar na entrevista: Interface Segregation evita 'fat interfaces' que forçam implementações desnecessárias. Em vez de Vehicle com fly(), swim(), drive(), crio interfaces específicas: Flyable, Swimmable, Driveable. Airplane implementa Flyable e Driveable, Boat implementa Swimmable e Driveable. Isso reduz acoplamento e torna implementações mais coesas e flexíveis."
    },
    {
      "id": 299,
      "question": "O que caracteriza uma função assíncrona em JavaScript?",
      "options": [
        { "id": 1, "name": "Ela é executada em paralelo com outras funções", "alias": "a" },
        { "id": 2, "name": "Ela retorna uma Promise e pode usar 'await' para esperar resultados", "alias": "b" },
        { "id": 3, "name": "Ela bloqueia a execução do restante do código", "alias": "c" }
      ],
      "correct": "b",
      "explanation": "Funções async retornam Promises automaticamente e permitem uso de await.",
      "category": "entrevista",
      "interviewTip": "Como explicar na entrevista: Funções async/await facilitam código assíncrono legível. Em vez de .then().catch(), uso try/catch com await. Exemplo: async function getUser() { try { const user = await api.fetchUser(); return user; } catch (error) { handleError(error); }}. Isso evita callback hell e torna o código mais limpo. Sempre implemento error handling adequado."
    },
    {
      "id": 300,
      "question": "Qual é a vantagem de usar 'await' dentro de uma função assíncrona?",
      "options": [
        { "id": 1, "name": "Permite que o código continue sem esperar a resposta", "alias": "a" },
        { "id": 2, "name": "Faz com que a função retorne imediatamente", "alias": "b" },
        { "id": 3, "name": "Suspende a execução até que a Promise seja resolvida", "alias": "c" }
      ],
      "correct": "c",
      "explanation": "await pausa a execução da função até que a Promise seja resolvida ou rejeitada.",
      "category": "entrevista",
      "interviewTip": "Como explicar na entrevista: await torna código assíncrono similar ao síncrono, melhorando legibilidade. Posso aguardar múltiplas operações sequenciais: const user = await getUser(); const profile = await getProfile(user.id); const posts = await getPosts(user.id). Ou paralelas com Promise.all: const [user, posts] = await Promise.all([getUser(), getPosts()]). Sempre uso try/catch para tratamento de erros."
    },
    {
      "id": 301,
      "question": "O que significa o termo 'assíncrono' na programação?",
      "options": [
        { "id": 1, "name": "Que as operações ocorrem em tempo real e simultaneamente", "alias": "a" },
        { "id": 2, "name": "Que as operações podem ocorrer de forma independente, sem bloquear o fluxo principal", "alias": "b" },
        { "id": 3, "name": "Que o código é executado apenas após o carregamento completo da página", "alias": "c" }
      ],
      "correct": "b",
      "explanation": "Programação assíncrona permite que operações executem sem bloquear o thread principal.",
      "category": "entrevista",
      "interviewTip": "Como explicar na entrevista: Programação assíncrona é essencial para UX responsiva. Enquanto faço requisição à API, a interface continua interativa. Uso Promises/async-await para operações demoradas: requisições HTTP, leitura de arquivos, timers. No Angular, Observables facilitam isso: this.http.get().subscribe() não trava a UI. Event Loop do JavaScript gerencia a execução, mantendo a aplicação fluida."
    },
    {
      "id": 302,
      "question": "Qual é a principal vantagem de usar programação assíncrona?",
      "options": [
        { "id": 1, "name": "Permite que múltiplas tarefas sejam executadas sem travar o sistema", "alias": "a" },
        { "id": 2, "name": "Evita o uso de funções", "alias": "b" },
        { "id": 3, "name": "Garante que todas as tarefas sejam executadas em ordem", "alias": "c" }
      ],
      "correct": "a",
      "explanation": "Programação assíncrona melhora responsividade e performance da aplicação.",
      "category": "entrevista",
      "interviewTip": "Como explicar na entrevista: Assíncrono evita blocking operations que travam a UI. Sem ele, uma requisição de 2 segundos congelaria toda a aplicação. Com async, posso mostrar loading spinner enquanto busco dados. Também permite paralelização: carregar dados do usuário E seus posts simultaneamente com Promise.all(). Isso melhora drasticamente a experiência do usuário."
    },
    {
      "id": 306,
      "question": "Qual é o principal objetivo da reunião diária (daily stand-up) em metodologias ágeis?",
      "options": [
        { "id": 1, "name": "Definir metas de longo prazo", "alias": "a" },
        { "id": 2, "name": "Compartilhar o progresso, identificar impedimentos e alinhar o time", "alias": "b" },
        { "id": 3, "name": "Apresentar o produto ao cliente", "alias": "c" }
      ],
      "correct": "b",
      "explanation": "Daily visa sincronização rápida do time e identificação precoce de bloqueios.",
      "category": "entrevista",
      "interviewTip": "Como explicar na entrevista: Daily é sobre transparência e colaboração. Cada membro responde: 'O que fiz ontem?', 'O que farei hoje?', 'Tenho impedimentos?'. Máximo 15 minutos, foco em sincronização, não relatório detalhado. Quando identifico impedimento, busco ajuda do time. Se alguém está trabalhando em algo similar, nos sincronizamos depois. Mantém o time alinhado e produtivo."
    },
    {
      "id": 307,
      "question": "O que acontece na reunião de planning (planejamento) em Scrum?",
      "options": [
        { "id": 1, "name": "O time define quais tarefas serão executadas no próximo sprint", "alias": "a" },
        { "id": 2, "name": "Os stakeholders aprovam o deploy em produção", "alias": "b" },
        { "id": 3, "name": "Os desenvolvedores revisam o código uns dos outros", "alias": "c" }
      ],
      "correct": "a",
      "explanation": "Sprint Planning define o escopo e objetivos do próximo sprint.",
      "category": "entrevista",
      "interviewTip": "Como explicar na entrevista: Sprint Planning é dividido em duas partes: 'O que faremos?' e 'Como faremos?'. Product Owner apresenta prioridades do backlog, time estima complexidade usando planning poker ou t-shirt sizes. Consideramos velocity histórica para definir capacidade realista. Quebramos User Stories em tarefas técnicas menores. Definimos Definition of Done clara. Planning bem feito garante sprint focado e produtivo."
    },
    {
      "id": 308,
      "question": "Qual é o propósito da reunião de review (revisão de sprint)?",
      "options": [
        { "id": 1, "name": "Apresentar o que foi desenvolvido e coletar feedback dos stakeholders", "alias": "a" },
        { "id": 2, "name": "Revisar os testes automatizados", "alias": "b" },
        { "id": 3, "name": "Planejar o próximo trimestre", "alias": "c" }
      ],
      "correct": "a",
      "explanation": "Sprint Review demonstra o incremento desenvolvido e coleta feedback.",
      "category": "entrevista",
      "interviewTip": "Como explicar na entrevista: Sprint Review é demo das funcionalidades entregues para stakeholders. Mostro o produto funcionando, não slides ou teorias. Coleto feedback real dos usuários, identifico ajustes necessários. PO atualiza o backlog baseado no feedback. É transparência total: mostro o que funcionou e o que não funcionou. Essa validação contínua garante que construímos o produto certo."
    },
    {
      "id": 309,
      "question": "O que é uma retrospectiva em metodologias ágeis?",
      "options": [
        { "id": 1, "name": "Uma reunião para revisar o código-fonte", "alias": "a" },
        { "id": 2, "name": "Uma reunião para refletir sobre o processo e buscar melhorias", "alias": "b" },
        { "id": 3, "name": "Uma análise de desempenho individual", "alias": "c" }
      ],
      "correct": "b",
      "explanation": "Retrospectiva foca em melhorar o processo de trabalho do time.",
      "category": "entrevista",
      "interviewTip": "Como explicar na entrevista: Retrospectiva é momento de melhoria contínua do processo. Usamos formato 'Start, Stop, Continue': o que começar a fazer, parar de fazer, continuar fazendo. Discutimos impedimentos recorrentes, celebramos sucessos, definimos ações concretas para o próximo sprint. Exemplo: identificamos que code review estava atrasando entregas, então definimos SLA de 24h para reviews. Foco sempre no processo, não nas pessoas."
    },
    {
      "id": 310,
      "question": "Qual é uma vantagem das metodologias ágeis em relação aos modelos tradicionais?",
      "options": [
        { "id": 1, "name": "Maior flexibilidade para mudanças e entregas incrementais", "alias": "a" },
        { "id": 2, "name": "Documentação extensa antes do início do projeto", "alias": "b" },
        { "id": 3, "name": "Execução linear e sem revisões", "alias": "c" }
      ],
      "correct": "a",
      "explanation": "Agilidade permite adaptação rápida a mudanças e entrega contínua de valor.",
      "category": "entrevista",
      "interviewTip": "Como explicar na entrevista: Metodologias ágeis respondem a mudanças ao invés de seguir plano rígido. Entregamos valor incremental a cada sprint, permitindo validação contínua com usuários. Se mercado muda ou surgem novas necessidades, pivotamos rapidamente. Feedback loops curtos evitam desperdício de tempo construindo features desnecessárias. Foco em individuals e interactions over processes and tools."
    },
    {
      "id": 311,
      "question": "Qual é a principal diferença entre Scrum e Kanban?",
      "options": [
        { "id": 1, "name": "Scrum usa sprints com duração fixa; Kanban é contínuo e baseado em fluxo", "alias": "a" },
        { "id": 2, "name": "Kanban exige reuniões diárias obrigatórias", "alias": "b" },
        { "id": 3, "name": "Scrum não possui papéis definidos", "alias": "c" }
      ],
      "correct": "a",
      "explanation": "Scrum trabalha em sprints timeboxed, enquanto Kanban é um fluxo contínuo baseado em limites WIP.",
      "category": "entrevista",
      "interviewTip": "Como explicar na entrevista: Trabalhei com ambos. Scrum é ideal quando precisa de entregas regulares e planejamento estruturado - sprints de 2 semanas com planning, daily, review e retrospectiva. Kanban uso para suporte ou manutenção, onde demandas chegam continuamente. O board Kanban limita WIP (work in progress) para evitar multitasking excessivo. Cada abordagem serve contextos diferentes."
    },
    {
      "id": 321,
      "question": "O que é um Design Pattern no contexto de desenvolvimento de software?",
      "options": [
        { "id": 1, "name": "Uma biblioteca de componentes visuais", "alias": "a" },
        { "id": 2, "name": "Uma solução reutilizável para problemas recorrentes de projeto", "alias": "b" },
        { "id": 3, "name": "Um tipo de teste automatizado", "alias": "c" }
      ],
      "correct": "b",
      "explanation": "Design Patterns são soluções testadas e documentadas para problemas comuns de design de software.",
      "category": "entrevista",
      "interviewTip": "Como explicar na entrevista: Design Patterns são como receitas de bolo - soluções comprovadas para problemas recorrentes. Por exemplo, uso Singleton para serviços que devem ter única instância (como AuthService), Observer para notificações entre componentes, Strategy para diferentes algoritmos de pagamento. Não são código, mas conceitos que tornam o sistema mais flexível e mantível. É importante não forçar padrões onde não são necessários."
    },
    {
      "id": 331,
      "question": "O que é um Observable no contexto do RxJS?",
      "options": [
        { "id": 1, "name": "Uma função que retorna um valor síncrono", "alias": "a" },
        { "id": 2, "name": "Uma abstração que representa um fluxo de dados assíncronos", "alias": "b" },
        { "id": 3, "name": "Um tipo de variável global", "alias": "c" }
      ],
      "correct": "b",
      "explanation": "Observables representam fluxos de dados que podem emitir valores ao longo do tempo.",
      "category": "entrevista",
      "interviewTip": "Como explicar na entrevista: Observable é como uma mangueira de dados - pode emitir múltiplos valores ao longo do tempo. Diferente de Promise que resolve uma vez, Observable pode emitir 0, 1 ou N valores. Uso para HTTP requests, eventos de formulário, WebSocket connections. É lazy - só executa quando subscribe. RxJS operators como map, filter, switchMap tornam o código declarativo."
    },
    {
      "id": 332,
      "question": "Qual operador RxJS é usado para transformar os valores emitidos por um Observable?",
      "options": [
        { "id": 1, "name": "map", "alias": "a" },
        { "id": 2, "name": "filter", "alias": "b" },
        { "id": 3, "name": "subscribe", "alias": "c" }
      ],
      "correct": "a",
      "category": "entrevista"
    },
    {
      "id": 333,
      "question": "O que o operador 'switchMap' faz em RxJS?",
      "options": [
        { "id": 1, "name": "Cancela o Observable anterior e substitui por um novo", "alias": "a" },
        { "id": 2, "name": "Combina múltiplos Observables em paralelo", "alias": "b" },
        { "id": 3, "name": "Executa todos os Observables em sequência", "alias": "c" }
      ],
      "correct": "a",
      "category": "entrevista"
    },
    {
      "id": 334,
      "question": "Qual é a função do método 'subscribe' em um Observable?",
      "options": [
        { "id": 1, "name": "Encerrar o Observable", "alias": "a" },
        { "id": 2, "name": "Iniciar a execução e receber os valores emitidos", "alias": "b" },
        { "id": 3, "name": "Transformar os dados em JSON", "alias": "c" }
      ],
      "correct": "b",
      "category": "entrevista"
    },
    {
      "id": 335,
      "question": "Qual operador RxJS é ideal para executar múltiplos Observables em paralelo e aguardar todos os resultados?",
      "options": [
        { "id": 1, "name": "mergeMap", "alias": "a" },
        { "id": 2, "name": "forkJoin", "alias": "b" },
        { "id": 3, "name": "concatMap", "alias": "c" }
      ],
      "correct": "b",
      "category": "entrevista"
    },
    {
      "id": 336,
      "question": "Qual operador RxJS é usado para filtrar valores emitidos por um Observable?",
      "options": [
        { "id": 1, "name": "filter", "alias": "a" },
        { "id": 2, "name": "map", "alias": "b" },
        { "id": 3, "name": "take", "alias": "c" }
      ],
      "correct": "a",
      "category": "entrevista"
    },
    {
      "id": 337,
      "question": "O que é um Subject em RxJS?",
      "options": [
        { "id": 1, "name": "Um tipo especial de Observable que permite multicasting", "alias": "a" },
        { "id": 2, "name": "Um operador para transformar valores", "alias": "b" },
        { "id": 3, "name": "Uma função que cancela Observables", "alias": "c" }
      ],
      "correct": "a",
      "category": "entrevista"
    },
    {
      "id": 338,
      "question": "Qual a diferença entre Subject e BehaviorSubject?",
      "options": [
        { "id": 1, "name": "BehaviorSubject armazena o último valor emitido e o envia aos novos inscritos", "alias": "a" },
        { "id": 2, "name": "Subject é síncrono e BehaviorSubject é assíncrono", "alias": "b" },
        { "id": 3, "name": "Subject é usado apenas em testes", "alias": "c" }
      ],
      "correct": "a",
      "category": "entrevista"
    },
    {
      "id": 339,
      "question": "Qual operador RxJS é usado para limitar a quantidade de valores emitidos?",
      "options": [
        { "id": 1, "name": "take", "alias": "a" },
        { "id": 2, "name": "merge", "alias": "b" },
        { "id": 3, "name": "scan", "alias": "c" }
      ],
      "correct": "a",
      "category": "entrevista"
    },
    {
      "id": 340,
      "question": "Por que usar RxJS em aplicações Angular?",
      "options": [
        { "id": 1, "name": "Para manipular fluxos assíncronos como eventos, requisições HTTP e formulários reativos", "alias": "a" },
        { "id": 2, "name": "Para substituir o roteamento padrão", "alias": "b" },
        { "id": 3, "name": "Para estilizar componentes com CSS", "alias": "c" }
      ],
      "correct": "a",
      "category": "entrevista"
    },
    {
      "id": 341,
      "question": "O que significa o termo 'lazy loading' em desenvolvimento web?",
      "options": [
        { "id": 1, "name": "Carregar todos os recursos da aplicação antes da interação do usuário", "alias": "a" },
        { "id": 2, "name": "Carregar recursos sob demanda, apenas quando necessário", "alias": "b" },
        { "id": 3, "name": "Evitar o uso de cache no navegador", "alias": "c" }
      ],
      "correct": "b",
      "explanation": "Lazy loading carrega recursos apenas quando necessários, melhorando performance inicial.",
      "category": "entrevista",
      "interviewTip": "Como explicar na entrevista: Lazy loading é carregar recursos sob demanda para melhorar performance inicial. No Angular, uso para módulos de features - ao invés de carregar tudo no app.module, carrego módulos quando usuário acessa a rota. Exemplo: módulo de admin só carrega quando admin faz login. Também aplico em imagens usando intersection observer. Reduzi bundle inicial de 2MB para 500KB implementando lazy loading. É essencial para Core Web Vitals."
    },
    {
      "id": 342,
      "question": "Qual é o principal benefício do lazy loading em aplicações Angular?",
      "options": [
        { "id": 1, "name": "Reduz o tempo de carregamento inicial da aplicação", "alias": "a" },
        { "id": 2, "name": "Aumenta o tamanho do bundle principal", "alias": "b" },
        { "id": 3, "name": "Impede a reutilização de componentes", "alias": "c" }
      ],
      "correct": "a",
      "category": "entrevista"
    },
    {
      "id": 343,
      "question": "Como o lazy loading é implementado em Angular?",
      "options": [
        { "id": 1, "name": "Utilizando o operador 'subscribe' em Observables", "alias": "a" },
        { "id": 2, "name": "Configurando rotas com 'loadChildren' no módulo de roteamento", "alias": "b" },
        { "id": 3, "name": "Importando todos os módulos no AppModule", "alias": "c" }
      ],
      "correct": "b",
      "category": "entrevista"
    },
    {
      "id": 344,
      "question": "Lazy loading pode ser aplicado a quais tipos de recursos?",
      "options": [
        { "id": 1, "name": "Imagens, módulos, componentes e scripts", "alias": "a" },
        { "id": 2, "name": "Apenas arquivos de áudio", "alias": "b" },
        { "id": 3, "name": "Somente estilos CSS", "alias": "c" }
      ],
      "correct": "a",
      "category": "entrevista"
    },
    {
      "id": 345,
      "question": "Qual prática pode complementar o lazy loading para melhorar a performance?",
      "options": [
        { "id": 1, "name": "Pré-carregamento seletivo (preloading)", "alias": "a" },
        { "id": 2, "name": "Desativar cache do navegador", "alias": "b" },
        { "id": 3, "name": "Carregar todos os scripts no head", "alias": "c" }
      ],
      "correct": "a",
      "category": "entrevista"
    },
    {
      "id": 346,
      "question": "O que significa uma arquitetura modular em projetos de software?",
      "options": [
        { "id": 1, "name": "Separar o código em partes independentes e reutilizáveis", "alias": "a" },
        { "id": 2, "name": "Agrupar todo o código em um único arquivo", "alias": "b" },
        { "id": 3, "name": "Evitar o uso de componentes reutilizáveis", "alias": "c" }
      ],
      "correct": "a",
      "category": "entrevista"
    },
    {
      "id": 347,
      "question": "Qual é uma vantagem de organizar um projeto Angular em módulos feature-based?",
      "options": [
        { "id": 1, "name": "Facilita o lazy loading e a manutenção do código", "alias": "a" },
        { "id": 2, "name": "Aumenta o tempo de build", "alias": "b" },
        { "id": 3, "name": "Impede a reutilização de componentes", "alias": "c" }
      ],
      "correct": "a",
      "category": "entrevista"
    },
    {
      "id": 348,
      "question": "Como a separação de responsabilidades contribui para a escalabilidade de um projeto?",
      "options": [
        { "id": 1, "name": "Permite que diferentes partes do sistema evoluam de forma independente", "alias": "a" },
        { "id": 2, "name": "Centraliza toda a lógica em um único módulo", "alias": "b" },
        { "id": 3, "name": "Reduz a necessidade de testes", "alias": "c" }
      ],
      "correct": "a",
      "category": "entrevista"
    },
    {
      "id": 349,
      "question": "Qual prática ajuda a manter um projeto escalável ao longo do tempo?",
      "options": [
        { "id": 1, "name": "Evitar documentação e testes", "alias": "a" },
        { "id": 2, "name": "Adotar padrões consistentes de arquitetura e modularização", "alias": "b" },
        { "id": 3, "name": "Manter todos os arquivos em uma única pasta", "alias": "c" }
      ],
      "correct": "b",
      "category": "entrevista"
    },
    {
      "id": 350,
      "question": "Em projetos escaláveis, o que é recomendado ao lidar com dependências entre módulos?",
      "options": [
        { "id": 1, "name": "Evitar acoplamento excessivo e usar interfaces ou serviços compartilhados", "alias": "a" },
        { "id": 2, "name": "Importar diretamente componentes de outros módulos", "alias": "b" },
        { "id": 3, "name": "Duplicar código para evitar dependências", "alias": "c" }
      ],
      "correct": "a",
      "category": "entrevista"
    }
  ],
  "results": {
    "X": "Parabéns! Você possui muito conhecimento em front-end!",
    "Y": "Continue estudando para melhorar suas habilidades!"
  }
}
